[
  {
    "type": "php",
    "functions": [
      "__construct",
      "setSandbox",
      "getSoapTypes",
      "getSoapMethods",
      "saveSoapDocumentation"
    ],
    "classes": [
      "AuthorizeNetSOAP",
      "AuthorizeNetSOAP"
    ],
    "comments": [
      "/**\n * A simple wrapper for the SOAP API as well as a helper function\n * to generate a documentation file from the WSDL.\n *\n * @package    AuthorizeNe",
      "/**\n * A simple wrapper for the SOAP API as well as a helper function\n * to generate a documentation file from the WSDL.\n *\n * @package    AuthorizeNe",
      "//api2.authorize.net/soap/v1/Service.asmx?WSDL\";",
      "//api2.authorize.net/soap/v1/Service.asmx\";",
      "//apitest.authorize.net/soap/v1/Service.asmx\";",
      "/**\n     * Constructor\n     */",
      "/**\n     * Switch between the sandbox or production gateway.\n     *\n     * @param bool\n     */",
      "/**\n     * Get all types as PHP Code.\n     * @return string\n     */",
      "// $1\\n    public \\$$2;\",$type);",
      "/**\n     * Get all methods as PHP Code.\n     * @return string\n     */",
      "/**\\n     * @return {$sig[0]}\\n    */",
      "/**\n     * Create a file from the WSDL for reference.\n     */",
      "/**\\n\";\n        $string .= \" * Auto generated documentation for the AuthorizeNetSOAP API.\\n\";\n        $string .= \" * Generated \" . date(\"m/d/Y\") . \"\\n"
    ],
    "length": 2794,
    "preview": "<?php\n/**\n * A simple wrapper for the SOAP API as well as a helper function\n * to generate a documentation file from the WSDL.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetSoap\n */\n\n/**\n * A simple wrapper for the SOAP API as well as a h",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetSOAP.php"
  },
  {
    "type": "php",
    "functions": [
      "__construct",
      "isAuthorizeNet",
      "generateHash",
      "__construct",
      "getHiddenFieldString",
      "getFingerprint"
    ],
    "classes": [
      "AuthorizeNetSIM",
      "for",
      "AuthorizeNetSIM_Form"
    ],
    "comments": [
      "/**\n * Easily use the Authorize.Net Server Integration Method(SIM).\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetSIM\n * @link       http:",
      "/**\n * Easily parse an AuthorizeNet SIM Response.\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetSIM\n */",
      "// For ARB transactions",
      "/**\n     * Constructor.\n     *\n     * @param string $api_login_id\n     * @param string $md5_setting For verifying an Authorize.Net message.\n     */",
      "// Set fields without x_ prefix",
      "// Set some human readable fields",
      "/**\n     * Verify the request is AuthorizeNet.\n     *\n     * @return bool\n     */",
      "/**\n     * Generates an Md5 hash to compare against Authorize.Net's.\n     *\n     * @return string Hash\n     */",
      "/**\n * A helper class for using hosted order page.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetSIM\n */",
      "/**\n     * Constructor\n     *\n     * @param array $fields Fields to set.\n     */",
      "// Set some best practice fields",
      "/**\n     * Get a string of HTML hidden fields for use in a form.\n     *\n     * @return string\n     */",
      "/**\n     * Generates a fingerprint needed for a hosted order form or DPM.\n     *\n     * @param string $api_login_id    Login ID.\n     * @param string "
    ],
    "length": 6465,
    "preview": "<?php\n/**\n * Easily use the Authorize.Net Server Integration Method(SIM).\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetSIM\n * @link       http://www.authorize.net/support/SIM_guide.pdf SIM Guide\n */\n\n/**\n * Easily parse an AuthorizeNet S",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetSIM.php"
  },
  {
    "type": "php",
    "functions": [
      "setTrack1Data",
      "setTrack2Data",
      "_handleResponse",
      "__construct",
      "isAuthorizeNet"
    ],
    "classes": [
      "AuthorizeNetCP",
      "AuthorizeNetCP_Response"
    ],
    "comments": [
      "/**\n * Easily interact with the Authorize.Net Card Present API.\n *\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCP\n * @link       http://",
      "/**\n * Builds and sends an AuthorizeNet CP Request.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCP\n */",
      "//cardpresent.authorize.net/gateway/transact.dll';",
      "/**\n     * Holds all the x_* name/values that will be posted in the request. \n     * Default values are provided for best practice fields.\n     */",
      "/**\n     * Device Types (x_device_type)\n     * 1 = Unknown\n     * 2 = Unattended Terminal\n     * 3 = Self Service Terminal\n     * 4 = Electronic Cash ",
      "/**\n     * Strip sentinels and set track1 field.\n     *\n     * @param  string $track1data\n     */",
      "/**\n     * Strip sentinels and set track2 field.\n     *\n     * @param  string $track2data\n     */",
      "/**\n     *\n     *\n     * @param string $response\n     * \n     * @return AuthorizeNetAIM_Response\n     */",
      "/**\n * Parses an AuthorizeNet Card Present Response.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCP\n */",
      "// An array with the split response.",
      "/**\n     * Constructor. Parses the AuthorizeNet response string.\n     *\n     * @param string $response      The response from the AuthNet server.\n    ",
      "// If it's an XML response",
      "// If it's an NVP response",
      "/**\n                 * If AuthorizeNet doesn't return a delimited response.\n                 */",
      "/**\n     * Is the MD5 provided correct?\n     *\n     * @param string $api_login_id\n     * @param string $md5_setting\n     * @return bool\n     */"
    ],
    "length": 8249,
    "preview": "<?php\n/**\n * Easily interact with the Authorize.Net Card Present API.\n *\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCP\n * @link       http://www.authorize.net/support/CP_guide.pdf Card Present Guide\n */\n\n \n/**\n * Builds and sends an Au",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetCP.php"
  },
  {
    "type": "php",
    "functions": [
      "authorizeAndCapture",
      "priorAuthCapture",
      "authorizeOnly",
      "void",
      "captureOnly",
      "credit",
      "__set",
      "setFields",
      "setCustomFields",
      "addLineItem",
      "setECheck",
      "setField",
      "setCustomField",
      "unsetField",
      "_handleResponse",
      "_getPostUrl",
      "_setPostString",
      "__construct"
    ],
    "classes": [
      "AuthorizeNetAIM",
      "AuthorizeNetAIM_Response"
    ],
    "comments": [
      "/**\n * Easily interact with the Authorize.Net AIM API.\n *\n * Example Authorize and Capture Transaction against the Sandbox:\n * <code>\n * <?php require",
      "/**\n * Builds and sends an AuthorizeNet AIM Request.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetAIM\n */",
      "//secure2.authorize.net/gateway/transact.dll';",
      "//test.authorize.net/gateway/transact.dll';",
      "/**\n     * Holds all the x_* name/values that will be posted in the request. \n     * Default values are provided for best practice fields.\n     */",
      "/**\n     * Only used if merchant wants to send multiple line items about the charge.\n     */",
      "/**\n     * Only used if merchant wants to send custom fields.\n     */",
      "/**\n     * Checks to make sure a field is actually in the API before setting.\n     * Set to false to skip this check.\n     */",
      "/**\n     * A list of all fields in the AIM API.\n     * Used to warn user if they try to set a field not offered in the API.\n     */",
      "/**\n     * Do an AUTH_CAPTURE transaction. \n     * \n     * Required \"x_\" fields: card_num, exp_date, amount\n     *\n     * @param string $amount   The ",
      "/**\n     * Do a PRIOR_AUTH_CAPTURE transaction.\n     *\n     * Required \"x_\" field: trans_id(The transaction id of the prior auth, unless split\n     * ",
      "/**\n     * Do an AUTH_ONLY transaction.\n     *\n     * Required \"x_\" fields: card_num, exp_date, amount\n     *\n     * @param string $amount   The dolla",
      "/**\n     * Do a VOID transaction.\n     *\n     * Required \"x_\" field: trans_id(The transaction id of the prior auth, unless split\n     * tender, then s",
      "/**\n     * Do a CAPTURE_ONLY transaction.\n     *\n     * Required \"x_\" fields: auth_code, amount, card_num , exp_date\n     *\n     * @param string $auth",
      "/**\n     * Do a CREDIT transaction.\n     *\n     * Required \"x_\" fields: trans_id, amount, card_num (just the last 4)\n     *\n     * @param string $tran",
      "/**\n     * Alternative syntax for setting x_ fields.\n     *\n     * Usage: $sale->method = \"echeck\";\n     *\n     * @param string $name\n     * @param st",
      "/**\n     * Quickly set multiple fields.\n     *\n     * Note: The prefix x_ will be added to all fields. If you want to set a\n     * custom field withou",
      "/**\n     * Quickly set multiple custom fields.\n     *\n     * @param array $fields\n     */",
      "/**\n     * Add a line item.\n     * \n     * @param string $item_id\n     * @param string $item_name\n     * @param string $item_description\n     * @param",
      "/**\n     * Use ECHECK as payment type.\n     */",
      "/**\n     * Set an individual name/value pair. This will append x_ to the name\n     * before posting.\n     *\n     * @param string $name\n     * @param s",
      "/**\n     * Set a custom field. Note: the x_ prefix will not be added to\n     * your custom field if you use this method.\n     *\n     * @param string $",
      "/**\n     * Unset an x_ field.\n     *\n     * @param string $name Field to unset.\n     */",
      "/**\n     *\n     *\n     * @param string $response\n     * \n     * @return AuthorizeNetAIM_Response\n     */",
      "/**\n     * @return string\n     */",
      "/**\n     * Converts the x_post_fields array into a string suitable for posting.\n     */",
      "// Add custom fields",
      "/**\n * Parses an AuthorizeNet AIM Response.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetAIM\n */",
      "// An array with the split response.",
      "/**\n     * Constructor. Parses the AuthorizeNet response string.\n     *\n     * @param string $response      The response from the AuthNet server.\n    ",
      "/**\n             * If AuthorizeNet doesn't return a delimited response.\n             */",
      "// Set custom fields"
    ],
    "length": 17958,
    "preview": "<?php\n/**\n * Easily interact with the Authorize.Net AIM API.\n *\n * Example Authorize and Capture Transaction against the Sandbox:\n * <code>\n * <?php require_once 'AuthorizeNet.php'\n * $sale = new AuthorizeNetAIM;\n * $sale->setFields(\n *     array(\n *",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetAIM.php"
  },
  {
    "type": "php",
    "functions": [
      "setRefId",
      "createCustomerProfile",
      "createCustomerPaymentProfile",
      "createCustomerShippingAddress",
      "createCustomerProfileTransaction",
      "deleteCustomerProfile",
      "deleteCustomerPaymentProfile",
      "deleteCustomerShippingAddress",
      "getCustomerProfileIds",
      "getCustomerProfile",
      "getCustomerPaymentProfile",
      "getCustomerShippingAddress",
      "updateCustomerProfile",
      "updateCustomerPaymentProfile",
      "updateCustomerShippingAddress",
      "updateSplitTenderGroup",
      "validateCustomerPaymentProfile",
      "_getPostUrl",
      "_handleResponse",
      "_setPostString",
      "_constructXml",
      "_addObject",
      "_notEmpty",
      "getTransactionResponse",
      "getValidationResponses",
      "getValidationResponse",
      "getCustomerProfileIds",
      "getCustomerPaymentProfileIds",
      "getCustomerShippingAddressIds",
      "getCustomerAddressId",
      "getCustomerProfileId",
      "getPaymentProfileId"
    ],
    "classes": [
      "to",
      "AuthorizeNetCIM",
      "to",
      "AuthorizeNetCIM_Response"
    ],
    "comments": [
      "/**\n * Easily interact with the Authorize.Net CIM XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCIM\n * @link       http://www.aut",
      "/**\n * A class to send a request to the CIM XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCIM\n */",
      "//api.authorize.net/xml/v1/request.api\";",
      "//apitest.authorize.net/xml/v1/request.api\";",
      "// \"none\",\"testMode\",\"liveMode\"",
      "/**\n     * Optional. Used if the merchant wants to set a reference ID.\n     *\n     * @param string $refId\n     */",
      "/**\n     * Create a customer profile.\n     *\n     * @param AuthorizeNetCustomer $customerProfile\n     * @param string               $validationMode\n  ",
      "/**\n     * Create a customer payment profile.\n     *\n     * @param int                        $customerProfileId\n     * @param AuthorizeNetPaymentProf",
      "/**\n     * Create a shipping address.\n     *\n     * @param int                        $customerProfileId\n     * @param AuthorizeNetAddress        $shi",
      "/**\n     * Create a transaction.\n     *\n     * @param string                     $transactionType\n     * @param AuthorizeNetTransaction    $transactio",
      "/**\n     * Delete a customer profile.\n     *\n     * @param int $customerProfileId\n     *\n     * @return AuthorizeNetCIM_Response\n     */",
      "/**\n     * Delete a payment profile.\n     *\n     * @param int $customerProfileId\n     * @param int $customerPaymentProfileId\n     *\n     * @return Aut",
      "/**\n     * Delete a shipping address.\n     *\n     * @param int $customerProfileId\n     * @param int $customerAddressId\n     *\n     * @return Authorize",
      "/**\n     * Get all customer profile ids.\n     *\n     * @return AuthorizeNetCIM_Response\n     */",
      "/**\n     * Get a customer profile.\n     *\n     * @param int $customerProfileId\n     *\n     * @return AuthorizeNetCIM_Response\n     */",
      "/**\n     * Get a payment profile.\n     *\n     * @param int $customerProfileId\n     * @param int $customerPaymentProfileId\n     *\n     * @return Author",
      "/**\n     * Get a shipping address.\n     *\n     * @param int $customerProfileId\n     * @param int $customerAddressId\n     *\n     * @return AuthorizeNet",
      "/**\n     * Update a profile.\n     *\n     * @param int                        $customerProfileId\n     * @param AuthorizeNetCustomer       $customerProf",
      "/**\n     * Update a payment profile.\n     *\n     * @param int                        $customerProfileId\n     * @param int                        $cust",
      "/**\n     * Update a shipping address.\n     *\n     * @param int                        $customerProfileId\n     * @param int                        $cus",
      "/**\n     * Update the status of an existing order that contains multiple transactions with the same splitTenderId.\n     *\n     * @param int           ",
      "/**\n     * Validate a customer payment profile.\n     *\n     * @param int                        $customerProfileId\n     * @param int                  ",
      "/**\n     * @return string\n     */",
      "/**\n     *\n     *\n     * @param string $response\n     * \n     * @return AuthorizeNetCIM_Response\n     */",
      "/**\n     * Prepare the XML post string.\n     */",
      "// Add extraOptions CDATA",
      "// Blank out our validation mode, so that we don't include it in calls that",
      "/**\n     * Start the SimpleXMLElement that will be posted.\n     *\n     * @param string $request_type The action to be performed.\n     */",
      "/**\n     * Add an object to an SimpleXMLElement parent element.\n     *\n     * @param SimpleXMLElement $destination The parent element.\n     * @param O",
      "/**\n     * Checks whether an array or object contains any values.\n     *\n     * @param Object $object\n     *\n     * @return bool\n     */",
      "/**\n * A class to parse a response from the CIM XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCIM\n */",
      "/**\n     * @return AuthorizeNetAIM_Response\n     */",
      "/**\n     * @return array Array of AuthorizeNetAIM_Response objects for each payment profile.\n     */",
      "/**\n     * @return AuthorizeNetAIM_Response\n     */",
      "/**\n     * @return array\n     */",
      "/**\n     * @return array\n     */",
      "/**\n     * @return array\n     */",
      "/**\n     * @return string\n     */",
      "/**\n     * @return string\n     */",
      "/**\n     * @return string\n     */"
    ],
    "length": 16541,
    "preview": "<?php\n/**\n * Easily interact with the Authorize.Net CIM XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetCIM\n * @link       http://www.authorize.net/support/CIM_XML_guide.pdf CIM XML Guide\n */\n\n\n\n/**\n * A class to send a request to ",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetCIM.php"
  },
  {
    "type": "php",
    "functions": [
      "setRefId",
      "createSubscription",
      "updateSubscription",
      "getSubscriptionStatus",
      "cancelSubscription",
      "_handleResponse",
      "_getPostUrl",
      "_setPostString",
      "getSubscriptionId",
      "getSubscriptionStatus"
    ],
    "classes": [
      "to",
      "AuthorizeNetARB",
      "to",
      "AuthorizeNetARB_Response"
    ],
    "comments": [
      "/**\n * Easily interact with the Authorize.Net ARB XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetARB\n * @link       http://www.aut",
      "/**\n * A class to send a request to the ARB XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetARB\n */",
      "//api.authorize.net/xml/v1/request.api\";",
      "//apitest.authorize.net/xml/v1/request.api\";",
      "/**\n     * Optional. Used if the merchant wants to set a reference ID.\n     *\n     * @param string $refId\n     */",
      "/**\n     * Create an ARB subscription\n     *\n     * @param AuthorizeNet_Subscription $subscription\n     *\n     * @return AuthorizeNetARB_Response\n    ",
      "/**\n     * Update an ARB subscription\n     *\n     * @param int                       $subscriptionId\n     * @param AuthorizeNet_Subscription $subscrip",
      "/**\n     * Get status of a subscription\n     *\n     * @param int $subscriptionId\n     *\n     * @return AuthorizeNetARB_Response\n     */",
      "/**\n     * Cancel a subscription\n     *\n     * @param int $subscriptionId\n     *\n     * @return AuthorizeNetARB_Response\n     */",
      "/**\n     *\n     *\n     * @param string $response\n     * \n     * @return AuthorizeNetARB_Response\n     */",
      "/**\n     * @return string\n     */",
      "/**\n     * Prepare the XML document for posting.\n     */",
      "/**\n * A class to parse a response from the ARB XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetARB\n */",
      "/**\n     * @return int\n     */",
      "/**\n     * @return string\n     */"
    ],
    "length": 3999,
    "preview": "<?php\n/**\n * Easily interact with the Authorize.Net ARB XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetARB\n * @link       http://www.authorize.net/support/ARB_guide.pdf ARB Guide\n */\n\n\n/**\n * A class to send a request to the ARB X",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetARB.php"
  },
  {
    "type": "php",
    "functions": [
      "getSettledBatchList",
      "getSettledBatchListForMonth",
      "getTransactionList",
      "getTransactionsForDay",
      "getTransactionDetails",
      "getBatchStatistics",
      "getUnsettledTransactionList",
      "_getPostUrl",
      "_handleResponse",
      "_setPostString",
      "_constructXml"
    ],
    "classes": [
      "to",
      "AuthorizeNetTD",
      "to",
      "AuthorizeNetTD_Response"
    ],
    "comments": [
      "/**\n * Easily interact with the Authorize.Net Transaction Details XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetTD\n * @link      ",
      "/**\n * A class to send a request to the Transaction Details XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetTD\n */",
      "//api.authorize.net/xml/v1/request.api\";",
      "//apitest.authorize.net/xml/v1/request.api\";",
      "/**\n     * This function returns information about a settled batch: Batch ID, Settlement Time, & \n     * Settlement State. If you specify includeStati",
      "/**\n     * Return all settled batches for a certain month.\n     *\n     * @param int $month\n     * @param int $year\n     *\n     * @return AuthorizeNetT",
      "/**\n     * This function returns limited transaction details for a specified batch ID\n     *\n     * @param int $batchId\n     *\n     * @return Authoriz",
      "/**\n     * Return all transactions for a certain day.\n     *\n     * @param int $month\n     * @param int $day\n     * @param int $year\n     *\n     * @re",
      "/**\n     * This function returns full transaction details for a specified transaction ID.\n     *\n     * @param int $transId\n     *\n     * @return Auth",
      "/**\n     * This function returns statistics about the settled batch specified by $batchId.\n     *\n     * @param int $batchId\n     *\n     * @return Aut",
      "/**\n     * This function returns the last 1000 unsettled transactions.\n     *\n     *\n     * @return AuthorizeNetTD_Response\n     */",
      "/**\n     * @return string\n     */",
      "/**\n     *\n     *\n     * @param string $response\n     * \n     * @return AuthorizeNetTransactionDetails_Response\n     */",
      "/**\n     * Prepare the XML post string.\n     */",
      "/**\n     * Start the SimpleXMLElement that will be posted.\n     *\n     * @param string $request_type The action to be performed.\n     */",
      "/**\n * A class to parse a response from the Transaction Details XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetTD\n */"
    ],
    "length": 6793,
    "preview": "<?php\n/**\n * Easily interact with the Authorize.Net Transaction Details XML API.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetTD\n * @link       http://www.authorize.net/support/ReportingGuide_XML.pdf Transaction Details XML Guide\n */\n\n\n/",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetTD.php"
  },
  {
    "type": "php",
    "functions": [
      "directPostDemo",
      "getRelayResponseSnippet",
      "getCreditCardForm"
    ],
    "classes": [
      "is",
      "that",
      "AuthorizeNetDPM"
    ],
    "comments": [
      "/**\n * Demonstrates the Direct Post Method.\n *\n * To implement the Direct Post Method you need to implement 3 steps:\n *\n * Step 1: Add necessary hidde",
      "/**\n * A class that demonstrates the DPM method.\n *\n * @package    AuthorizeNet\n * @subpackage AuthorizeNetDPM\n */",
      "//secure.authorize.net/gateway/transact.dll';",
      "//test.authorize.net/gateway/transact.dll';",
      "/**\n     * Implements all 3 steps of the Direct Post Method for demonstration\n     * purposes.\n     */",
      "// Step 1: Show checkout form to customer.",
      "// Any sequential number like an invoice number.",
      "// Step 2: Handle AuthorizeNet Transaction Result & return snippet.",
      "// Do your processing here.",
      "// Redirect to error page.",
      "// Send the Javascript back to AuthorizeNet, which will redirect user back to your site.",
      "// Step 3: Show receipt page to customer.",
      "/**\n     * A snippet to send to AuthorizeNet to redirect the user back to the\n     * merchant's server. Use this on your relay response page.\n     *\n ",
      "/**\n     * Generate a sample form for use in a demo Direct Post implementation.\n     *\n     * @param string $amount                   Amount of the tr"
    ],
    "length": 9308,
    "preview": "<?php\n/**\n * Demonstrates the Direct Post Method.\n *\n * To implement the Direct Post Method you need to implement 3 steps:\n *\n * Step 1: Add necessary hidden fields to your checkout form and make your form is set to post to AuthorizeNet.\n *\n * Step 2",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/anet_php_sdk/lib/AuthorizeNetDPM.php"
  }
]