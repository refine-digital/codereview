[
  {
    "type": "php",
    "functions": [
      "init",
      "ical_attachment_bookings",
      "ical_attachment_multiple_bookings",
      "reminder_options",
      "custom_email_options",
      "email_bookings_options"
    ],
    "classes": [
      "EM_Emails_Admin"
    ],
    "comments": [
      "/*\n     * --------------------------------------------\n     * Email Reminders\n     * --------------------------------------------\n     */",
      "/**\n\t * Generates meta box for settings page \n\t */",
      "//codex.wordpress.org/Category:WP-Cron_Functions','http://code.tutsplus.com/articles/insights-into-wp-cron-an-introduction-to-scheduling-tasks-in-word",
      "/*\n     * --------------------------------------------\n     * Custom Event/Gateway Booking Emails\n     * --------------------------------------------\n",
      "/**\n\t * Generates meta box for settings page \n\t */"
    ],
    "length": 10284,
    "preview": "<?php\nclass EM_Emails_Admin {\n    \n    public static function init(){\n        add_action('em_options_page_footer_emails', 'EM_Emails_Admin::reminder_options');\n        add_action('em_options_page_footer_emails', 'EM_Emails_Admin::custom_email_options",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/emails-admin.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "after_gatweay_custom_emails",
      "em_custom_emails_admin_gateway_update"
    ],
    "classes": [
      "EM_Custom_Emails_Admin_ML"
    ],
    "comments": [
      "//we can go through each language and display another language set of email forms",
      "//get default email values for languages",
      "//trick EM_ML to load the default options of this language",
      "//get default email values again after our 'trick'",
      "//get admin emails for this language",
      "//mod some texts so it's language-specific",
      "//modify MB titles too",
      "//duplicate default emails array and give them different keys",
      "//get default mb values and merge them into email values",
      "//get custom values if applicable",
      "//merge them all together",
      "//output an editor form for this language",
      "//update multilingual templates (not original language), save them into one serialized array",
      "//update admin emails"
    ],
    "length": 5009,
    "preview": "<?php\nclass EM_Custom_Emails_Admin_ML{\n    public static function init(){\n        add_action('after_gatweay_custom_emails','EM_Custom_Emails_Admin_ML::after_gatweay_custom_emails',10,5);\n        add_action('em_custom_emails_admin_gateway_update','EM_",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/custom-emails-admin-ml.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "em_ml_init",
      "emails_editor",
      "emails_editor_js",
      "get_default_emails",
      "get_default_email_values",
      "editor_get_post",
      "editor_admin_emails_get_post",
      "em_gateway_settings_footer",
      "add_gateway_mb_default_emails",
      "em_gateway_update",
      "update_gateway_admin_emails",
      "get_gateway_default_emails",
      "merge_gateway_default_values",
      "meta_boxes",
      "event_meta_box",
      "em_event_get_post_meta",
      "em_event_validate_meta",
      "em_event_save_meta",
      "em_event_save_events"
    ],
    "classes": [
      "EM_Custom_Emails_Admin"
    ],
    "comments": [
      "//Custom Event Emails",
      "//Custom Gateway Emails",
      "//multilingual hook - this SHOULD fire after the EM_ML init hook as it's added after EM_ML is loaded",
      "/*\n     * --------------------------------------------\n     * General Editor Functions for Overriding Emails\n     * ----------------------------------",
      "/**\n\t * Builds form for overriding booking emails\n\t * @param array $emails_array_custom\n\t * @param array $emails_values_custom\n\t */",
      "//build structure of emails to show",
      "//$admin_emails_custom could be an array of email arrays or an array of comma-delimted emails",
      "//output the structure in an html form format",
      "//hide all groups by default unless only 1 exists, then just subgroups",
      "//add listener to triggers for groups and subgroups",
      "//add listeners to individual email status changes",
      "//show subgroup and groups if not default value",
      "// apply filters here so we don't have",
      "/**\n\t * @param EM_Gateway|false $EM_Gateway\n\t * @param boolean $multiple_bookings\n\t * @return array\n\t */",
      "//build structure of values to add to these emails",
      "//handle gateways, and only return a single gateway value if requested by $EM_Gateway parameter",
      "//default values are - by default - the general settings values, overriden further down by $possible_email_values",
      "//temporary fix, we assume everything is online except for offline - maybe a good reason for split offline/online base gateway subclasses",
      "//get custom values if applicable",
      "//merge in only messages here not statuses",
      "//apply filters here to get all emails included for filtering",
      "//status is set, save it and message if needed",
      "//only if enabled do we need to save an email format",
      "/**\n\t * Gets posted admin email values and mnerges it into the passed array of emails. \n\t * @param array $custom_email_defaults Supplied array of admi",
      "/*\n     * --------------------------------------------\n     * Custom Gateway Booking Emails\n     * --------------------------------------------\n     *",
      "/**\n\t * @param EM_Gateway $EM_Gateway\n\t */",
      "//get default email structures and values",
      "//get custom values if applicable and merge them into $email_values",
      "//duplicate default emails array and give them different keys",
      "//get default mb values and merge them into email values",
      "//get custom values if applicable",
      "//merge them all together",
      "/**\n\t * Updates the custom email settings for a gateway when a gateway settings page is updated.\n\t * @param EM_Gateway $EM_Gateway\n\t */",
      "//update admin email addresses",
      "//validate emails, strip out invalid emails",
      "//temporary fix, we assume everything is online except for offline - maybe a good reason for split offline/online base gateway subclasses",
      "// apply generic filters afterwards so the workaround above is applied too",
      "//gateway default is either disabled or set to the default, so we just override the status",
      "//add the new default subject/message to email values (without changing the status)",
      "//gateway default is either disabled or set to the default, so we just override the status",
      "/*\n     * --------------------------------------------\n     * Custom Event Booking Emails\n     * --------------------------------------------\n     */",
      "//get custom email values if they exist",
      "//warn users that these emails only apply when resending emails in multipl bookings mode",
      "//only delete if custom_booking_emails property is set, since that only happens when populating a specific event in the admin, not another event on th",
      "//only delete if custom_admin_emails property is set, since that only happens when populating a specific event in the admin, not another event on the ",
      "//delete all previous records of event coupons"
    ],
    "length": 34236,
    "preview": "<?php\nclass EM_Custom_Emails_Admin {\n    public static $caps = array('custom_emails'=>'manage_bookings');\n    \n    public static function init(){\n\t\t//Custom Event Emails\n\t\tif( get_option('dbem_custom_emails_events') ){\n\t\t\t\tadd_action('add_meta_boxes'",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/custom-emails-admin.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "actions",
      "get_filters",
      "estimate",
      "get_attachments_dir",
      "event_booking_options_buttons",
      "event_booking_options",
      "email_page"
    ],
    "classes": [
      "Email_Bookings"
    ],
    "comments": [
      "//Add options and tables to EM admin pages",
      "/* @var \\EM_Notices $EM_Notices */",
      "//get bookings of a certain status",
      "//build array of attachments",
      "// prep upload and get upload dir",
      "// split files into array as if files were submitted with different name values",
      "// go through files and prepare attachment",
      "// prepare for inclusion, deletion will happen by PHP automatically",
      "// prepare to add as a batch attachment",
      "// add attachments to the batch",
      "// queue for sending",
      "// for batch sending",
      "// insert it all now",
      "/* @var \\EM_Notices $EM_Notices */",
      "/* @var \\EM_Notices $EM_Notices */",
      "//get bookings of a certain status",
      "// not needed for this hack",
      "// not needed for this hack",
      "/**\n\t * Adds an add send email button to admin pages\n\t */",
      "/**\n\t * Adds a link to send attendee emails in admin pages\n\t */",
      "/**\n\t * Generates the Email options page for an event booking admin\n\t */",
      "/* Taken from EM settings page */",
      "/* @var \\EM_Ticket $EM_Ticket */",
      "// first calculate size to make sure we're ok",
      "// proceed if we can uplaod size",
      "// send input into uploads box so we have a separate input per file"
    ],
    "length": 27772,
    "preview": "<?php\nnamespace EM\\Emails;\nuse EM_Booking, EM_Mailer;\n\nclass Email_Bookings {\n\t\n\tstatic $attachments_directory;\n\t\n\tpublic static function init(){\n\t\t//Add options and tables to EM admin pages\n\t\tif( current_user_can('manage_others_bookings') ){\n\t\t\tadd_",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/email-bookings.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "em_ml_init",
      "merge_emails_array",
      "get_event_emails",
      "get_event_admin_emails",
      "get_booking_messages",
      "event_email_messages",
      "gateway_email_messages",
      "event_admin_emails",
      "get_gateway_admin_emails",
      "em_custom_emails_gateway_groups",
      "gateway_admin_emails",
      "em_data_privacy_export_events_item"
    ],
    "classes": [
      "EM_Custom_Emails"
    ],
    "comments": [
      "/**\n\t * Initializes custom emails by hooking into booking email filters and modifying the recpipients and message content accordingly \n\t */",
      "//hooks for gateway-specific emails",
      "//hook into admin emails for gateway-specific extra admin addresses",
      "//hooks for event-specific emails, which override gateway-spefic ones",
      "//110 so it overrides gateway-specific",
      "//hook into admin emails for custom per-event extra admin email addresses",
      "//multilingual hook - this SHOULD fire after the EM_ML init hook as it's added after EM_ML is loaded",
      "/**\n\t * Merges two email arrays recursively, only overwriting to the second level arrays in the first array.\n\t * @param array $custom_emails\n\t * @para",
      "//example array of $custom_emails : array('offline-admin'=>array(0=>array(...),5=>array(...)), 'offline-user'=>array(2=>array(....));",
      "//go through the overriding emails and overwrite statuses in $custom_emails",
      "//group already exists, so overwrite any conflicting keys",
      "//this group isn't in $custom_emails so just add it entirely",
      "/*\n     * --------------------------------------------\n     * Custom Event Booking Emails\n     * --------------------------------------------\n     */",
      "/**\n\t * Returns an array of email templates specific to the supplied event\n\t * @param EM_Event $EM_Event the event object which may contain custom ema",
      "/**\n\t * Returns an array of additional admin emails specific to the supplied event\n\t * @param EM_Event $EM_Event the event object which may contain cu",
      "//get stored event emails from em_meta table",
      "//convert comma-seperated values into arrays",
      "/**\n\t * Filter out the right email to be sent. Takes an array of custom email possibilities, types of email groups to check for and a booking object t",
      "//emails that could be used to override",
      "//set both admin and user email messages according to settings in custom emails defined above",
      "//override default email with custom email",
      "//disable the email entirely",
      "/**\n\t * Hooks into the em_booking_email_messages filter to modify email templates with event-specific ones if defined.\n\t * @param array $msg array of ",
      "//ignore MB bookings",
      "//create set of users to check against $custom_emails",
      "//by default, we check admin and user email keys in $custom_emails",
      "//add gateway checks if booking used one, event gateway emails will override the default ones since added to end of array",
      "//get custom event emails and determine which should be used",
      "//merge in custom event emails into default $msg",
      "/**\n\t * Takes current emails passed by the em_booking_email_messages filter and adds/replaces with gateway-specific emails.\n\t * @param array $custom_e",
      "//firstly, check if we're using a gateway at all for this booking",
      "//create set of groups to check against $custom_emails",
      "//get custom gateway email messages",
      "//if we have an 'awaiting payment' status and only a 'pending' status template, default to 'pending' so we don't skip to the general default pending t",
      "//determine which will be used",
      "//merge into default $msg and return",
      "/**\n\t * Hooks into em_booking_admin_emails filter and adds additional admin email addresses specific for this event\n\t * @param array $emails array of ",
      "//prevent MB bookings from possibly sending individual event emails",
      "/*\n     * --------------------------------------------\n     * Custom Gateway Booking Emails\n     * --------------------------------------------\n     *",
      "/**\n\t * Gets array of admin email addresses for a specific gateway.\n\t * @param EM_Gateway $EM_Gateway\n\t * @param string $lang\n\t * @return array Multi-",
      "//convert all comma-delimited values",
      "/**\n\t * Hooks into em_multiple_booking_email_messages and checks for gateway-specific emails for multiple booking objects.\n\t * @param array $groups_to",
      "//MB Mode bookings has normal gateway checks",
      "/**\n\t * Hook for em_booking_admin_emails which adds to a list of admin emails being notified of the passed EM_Booking object.\n\t * @param array $emails",
      "//if MB mode is on, we check the mb email templates instead",
      "/**\n\t * @param array $export_item\n\t * @param EM_Event $EM_Event\n\t * @return array\n\t */",
      "//if( empty($EM_Event->event_owner_anonymous) ){ //we may want to limit this to registered users only since anon users can't do this"
    ],
    "length": 14995,
    "preview": "<?php\nclass EM_Custom_Emails{\n\t\n\t/**\n\t * Initializes custom emails by hooking into booking email filters and modifying the recpipients and message content accordingly \n\t */\n\tpublic static function init(){\n\t\t//hooks for gateway-specific emails\n\t\tif( g",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/custom-emails.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "em_custom_emails_event_messages",
      "em_custom_emails_event_admin",
      "em_custom_emails_gateway_messages",
      "em_custom_emails_gateway_admin"
    ],
    "classes": [
      "EM_Custom_Emails_ML"
    ],
    "comments": [
      "/**\n\t * Adds some ML hooks\n\t */",
      "//hooks for event-specific emails",
      "//hooks for gateway-specific emails",
      "/**\n\t * Checks if the event linked to EM_Booking is in the language we're currently requesting, \n\t * otherwise call the same function EM_Custom_Emails",
      "//get the translated event",
      "//check that we're not already dealing with the translated event",
      "//get custom emails belonging to this event translation",
      "//merge the emails belonging to this event translation with the original event, overriding original event if anything is set",
      "/**\n\t * Checks if the event linked to EM_Booking is in the language we're currently requesting, \n\t * otherwise call the same function EM_Custom_Emails",
      "//get the translated event",
      "//return custom email and override the emails created in event_admin_emails if we aren't already dealing with the right event translation",
      "//merge these emails, they'll overwrite the original language custom admin emails, the original event owner will receive all emails",
      "/**\n\t * Checks if the event linked to EM_Booking is in the language we're currently requesting, \n\t * otherwise call the same function EM_Custom_Emails",
      "//if booking language is set, get the translation",
      "//unserlialize saved translations for gateway emails and check whether we have",
      "//translations exist, so merge them into gateway emails for filter return",
      "/**\n     * Merges translations of gateway emails into default gateway emails if booking is not the default language.\n\t * @param array $admin_emails\n\t ",
      "//get admin emails for this language",
      "//convert all comma-delimited values into an array for merging",
      "//merge new emails, they will overwrite original language emails for this gateway"
    ],
    "length": 4945,
    "preview": "<?php\nclass EM_Custom_Emails_ML{\n\t/**\n\t * Adds some ML hooks\n\t */\n\tpublic static function init(){\n\t\t//hooks for event-specific emails\n\t    add_filter('em_custom_emails_event_messages', 'EM_Custom_Emails_ML::em_custom_emails_event_messages',111,2);\n\t\t",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/custom-emails-ml.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "clear_crons",
      "booking_email_ical_attachments",
      "queue_emails",
      "process_queue",
      "if",
      "clean_attachments",
      "clean_batch_data",
      "clean_icals"
    ],
    "classes": [
      "EM_Emails"
    ],
    "comments": [
      "/**\n\t * Sets up email cron and filters/actions\n\t */",
      "//enable custom emails",
      "//add booking email icals",
      "//set up cron for addint to email queue",
      "//offset time to run at UTC time for WP Cron",
      "//set up cron for clearing email queue",
      "//set up emails for ical cleaning",
      "//offset time to run at UTC time for WP Cron",
      "//unschedule the crons",
      "//add email ical attachment",
      "/**\n\t * Run on cron and prep emails to go out\n\t */",
      "//For each event x days on",
      "//make sure we don't get past events, only events starting that specific date",
      "/* @var $EM_Event EM_Event */",
      "//get confirmed bookings",
      "/* @var $EM_Booking EM_Booking */",
      "//create invite ical",
      "//check that this isn't doing cron already - if this is MultiSite Global, then we place a lock at Network level",
      "//if process has been running for over 15 minutes or 900 seconds (e.g. likely due to a php error or timeout), let it proceed",
      "// cached data for multiple emails",
      "//loop through results of query whilst results exist",
      "// get batch ids from this queue",
      "// prevent deletion of attachments, this is meant for when no more batch items are in queue",
      "//go through current results set",
      "//if we reach a limit (provided limit is > 0, remove lock and exit this function",
      "// get batch data if any and merge repeated info into this",
      "// currently we only check attachments, future we could do more",
      "//send email, immediately delete after from queue",
      "//add to the count and move onto next email",
      "//if we haven't reached a limit, load up new results",
      "//remove the lock on this cron",
      "// get batch ids that are orphaned (i.e. batches completed)",
      "// delete files soociated with the batches if necessary",
      "// delete records we just cleaned",
      "/**\n\t * Cleans unused ical files \n\t */",
      "//get theme CSS files",
      "//count number of matches"
    ],
    "length": 13244,
    "preview": "<?php\nclass EM_Emails {\n\t/**\n\t * Sets up email cron and filters/actions\n\t */\n\tpublic static function init() {\n\t\t//enable custom emails\n\t\tif( get_option('dbem_custom_emails') ){\n\t\t\tinclude('custom-emails.php');\n\t\t}\n\t\tif( get_option('dbem_email_booking",
    "file": "src/code/events-manager-pro/add-ons/gateways-legacy/emails/emails.php"
  }
]