[
  {
    "type": "php",
    "functions": [
      "init",
      "em_locate_template_default",
      "generate_map_link",
      "output_image",
      "get_map_args",
      "get_map_url",
      "get_map_link",
      "get_image_directory",
      "get_image_directory_url",
      "cleanup_directory",
      "encodeBase64UrlSafe",
      "decodeBase64UrlSafe",
      "signUrl"
    ],
    "classes": [
      "EM_Google_Static_Maps"
    ],
    "comments": [
      "//set up cron for addint to email queue",
      "//offset time to run at UTC time for WP Cron",
      "//if we got here, the image doesn't exist, so we create it based on the requested location ID and size",
      "//get url of map and output prelim headers",
      "//if we have caching disabled, just output the image",
      "// Create directory if necessary and generate the filename we'll be creating",
      "// Copy URL to new file",
      "//handle error, show an error image if we can't just output the image itself...",
      "//generate the map url",
      "//maps.googleapis.com/maps/api/staticmap\");",
      "//add styles which we convert from snazzy maps style",
      "//now we generate the signature for this map url",
      "// Decode the private key into its binary format",
      "// Create a signature using the private key and the URL-encoded string using HMAC SHA1. This signature will be binary.",
      "//add signature to map url",
      "//www.google.com/maps/@?api=1&map_action=map&basemap=roadmap&center={$args['center']}&zoom={$args['zoom']}\";",
      "//If in ms recurrence mode, we are getting the default wp-content/uploads folder",
      "//If in ms recurrence mode, we are getting the default wp-content/uploads folder",
      "//calculate what time is the cut-off time to delete files",
      "//go through each image and verify if it should be deleted",
      "// Encode a string to URL-safe base64",
      "// Decode a string from URL-safe base64",
      "// Sign a URL with a given crypto key",
      "// Note that this URL must be properly URL-encoded",
      "// Decode the private key into its binary format",
      "// Create a signature using the private key and the URL-encoded",
      "// string using HMAC SHA1. This signature will be binary."
    ],
    "length": 7919,
    "preview": "<?php\nclass EM_Google_Static_Maps {\n\tpublic static function init(){\n\t\tadd_filter('init', 'EM_Google_Static_Maps::output_image');\n\t\tadd_filter('em_locate_template_default', 'EM_Google_Static_Maps::em_locate_template_default', 10, 2);\n\t\tif( get_option(",
    "file": "src/code/events-manager-pro/add-ons/google-maps/google-static-maps.php"
  },
  {
    "type": "php",
    "functions": [
      "em_google_static_maps_ml"
    ],
    "classes": [],
    "comments": [
      "/*\n * dbem_gmap_static_cache\n * dbem_gmap_static_cache_expiry\n * dbem_gmap_static\n * dbem_gmap_server_key\n * dbem_gmap_static_secret\n */"
    ],
    "length": 499,
    "preview": "<?php\n/*\n * dbem_gmap_static_cache\n * dbem_gmap_static_cache_expiry\n * dbem_gmap_static\n * dbem_gmap_server_key\n * dbem_gmap_static_secret\n */\nif( get_option('dbem_gmap_type') == 'static' ){\n\tinclude('google-static-maps.php');\n}\nif( is_admin() && !de",
    "file": "src/code/events-manager-pro/add-ons/google-maps/google-maps.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "em_settings_google_maps_options",
      "em_settings_google_maps_general",
      "em_settings_google_maps_keys"
    ],
    "classes": [
      "EM_Google_Static_Maps_Admin"
    ],
    "comments": [
      "/*\n * dbem_gmap_static_cache\n * dbem_gmap_static_cache_expiry\n * dbem_gmap_static\n * dbem_gmap_server_key\n * dbem_gmap_static_secret\n * dbem_gmap_embe",
      "//dbem_gmap_static_link",
      "//wp-events-plugin.com/documentation/google-maps/static-maps/?utm_source=plugin&utm_medium=pro-settings&utm_campaign=gmaps-static-keys\">'.__('document",
      "//wp-events-plugin.com/documentation/google-maps/static-maps/?utm_source=plugin&utm_medium=pro-settings&utm_campaign=gmaps-static-keys#api-keys\">'.esc"
    ],
    "length": 3855,
    "preview": "<?php\nclass EM_Google_Static_Maps_Admin {\n\tpublic static function init(){\n\t\tadd_filter('em_settings_google_maps_options', 'EM_Google_Static_Maps_Admin::em_settings_google_maps_options');\n\t\tadd_action('em_settings_google_maps_general', 'EM_Google_Stat",
    "file": "src/code/events-manager-pro/add-ons/google-maps/google-static-maps-admin.php"
  }
]