[
  {
    "type": "php",
    "functions": [
      "init",
      "wp_dashboard_setup",
      "admin_print_scripts",
      "stats_widget",
      "ajax",
      "save_view",
      "get_post_args",
      "get_default_args",
      "get_compare_options",
      "get_range_types",
      "get_range_dates",
      "get_stats",
      "build_dataset_template",
      "get_date_range_i18n",
      "get_date_indexes",
      "get_sql_groupby",
      "output",
      "output_chart",
      "get_differences",
      "selected",
      "implode_js",
      "js_footer"
    ],
    "classes": [
      "Dashboard"
    ],
    "comments": [
      "//wp_enqueue_script( 'chart-js', 'https://cdn.jsdelivr.net/npm/chart.js@4.0.1/dist/chart.umd.min.js', array(), EM_VERSION);",
      "//wp_enqueue_script( 'chart-js-utils', 'https://www.chartjs.org/samples/2.9.4/utils.js', array());",
      "// we need to call this before enqueue, otherwise it'll get enqueued at footer and possibly dependent EM stuff isn't loaded",
      "// we need to call this before enqueue, otherwise it'll get enqueued at footer and possibly dependent EM stuff isn't loaded",
      "// no permissions for bookings, should have not even got here!",
      "// get current user bookings",
      "// determine unit of measurement",
      "// we'll nt a rann of dates her regardeless",
      "// we need to get the first date of a booking according to conditions set further up without scope",
      "// no results to find anyway",
      "// get the range of dates",
      "// get compare data scopes",
      "// get difference of dates for first scope and add it to the base date via DateTime",
      "// get custom dates, working off the given date and calculating the difference of first scope to determine same range of days",
      "// get 1 day less than first scope day and then work backwards to difference",
      "// extra day so we end day before first scope",
      "// we want pure days, not months hours etc.",
      "// get end date and go back until we're earlier than start period, so we have exact same year periods. We subtract days difference to account for leap",
      "// we want pure days, not months hours etc.",
      "// convert dates to SQL-able array",
      "// group/split results by time frame",
      "// prep stats object to return all data",
      "// null datasets with no info (stacks) so we warn user",
      "// same unit over a period of time, get difference from first scope",
      "// set up subgroup values",
      "// determine if we can show a line graph (if requested) or some other type, otherwise revert to bars which can accommodate all types",
      "// duplicate stack if we're comparing units rather than scopes",
      "// fix siatuations where there's an extra label in comparison (since we're comparing fixed days some ranges will spill into an extra year or month)",
      "// we're altering the smallest dataset so they match up",
      "// add blank key with a 0 index, so it always gets prepended to front of array, it doesn't matter since the value is null for sure so no index referen",
      "// resort labels since the loop above was chronologically ordered already",
      "// now go through scopes, get results and fill in data",
      "// prepare WHERE condition",
      "// determine how many sets of data we need here for this stack, e.g. for a year we'll need 12 months i.e. a stack will have 12 data arrays",
      "// we go through each found date and add it to an array, then we fill in potential blanks",
      "// add label for dataset",
      "// fill up each data array item with subgroup data",
      "// get a subgroup query and group up",
      "// change date into string meaningful info",
      "// change date into string meaningful info",
      "// if we're dealing with selectors, we can't compare scopes so we increase the stack count here, since they are essentially the stacks",
      "// if we're dealing with selectors, we're done regardless of scope comparison",
      "// if there's only one point of data, then we default to bars since there isn't any lines just a dot",
      "// convert 0s to null so skipNull takes effect",
      "// if subgrouped, $data will be objects and the null values are already applied, this will be skipped",
      "// both are objects with unique indexes, shared or unique",
      "// rebuild labels of previous period to front of labels",
      "// padd data so it matches labels",
      "// force null values since it may have started as a line graph",
      "// save dataset array so it's sorted further down",
      "// null i.e. non-existent so it's skipped",
      "/* not needed anymore since it's sorted at the end\n\t\t\t\t// resort out data so they lign up with labels\n\t\t\t\tforeach( $datasets as $stack => $dataset ){\n",
      "// we unify the data for bars and pies, otherwise might as well just show a line",
      "// pies need all labels and all data, in corresponding order without 0s, that's about it!",
      "// now we have matching data and labels, reorder and pass ordered arrays",
      "// assumed same for a pie chart",
      "// Add y axes, with a second one if units are different (i.e. price vs number)",
      "// add second axis to chart.js",
      "// we know we're comparing different scale types so we'll need two y-axes",
      "//empty($subgroup) && $stats->type === 'line'",
      "// sort and match numerical indexes for compareLabel array",
      "// reorder, flatten dataset data structures and/or remove associative keys",
      "// subgroups will have an array for data, so we need to split this up into a group of datasets for each dataset",
      "// clone stack dataset, clear data prop and make it a single array",
      "/*\n\t\t\t\t\t\t\t\tforeach( $dataset_subgroup->compareLabels as $k => $v ){\n\t\t\t\t\t\t\t\t\t$dataset_subgroup->compareLabels[$k] = $dataset_subgroup->label;\n\t\t\t\t\t\t\t\t",
      "// sort out subgroups and remove indexes",
      "// empty data, add a warning",
      "// now we sort and remove keys from data array",
      "// finally take some overview stats for below the graph, adding a previous range scope if not comparing",
      "/*\n\t\tif( count($scopes) === 1 ){\n\t\t\t// get 1 day less than first scope day and then work backwards to difference\n\t\t\t$interval = $scopes[0]['end']->dif",
      "// build datasets array with re-usable data for each x-Axis (stack) set",
      "// before returning data, label and dataset will be reordered by index and converted to numeric array, so that all data lines up",
      "// today (tomorrow further down)",
      "// get last day of week",
      "// last day of month",
      "// so any sec less than this is day before",
      "// loop through scope in units and set datasets",
      "// pies and bars don't look as nice with empty 0 vals",
      "// add time and loop",
      "// now deal with subgroup data labels, for each group e.g. a year, we add the max number of subgroup items i.e. months in each stack key",
      "// this is fixed per grouping because we need symetrical arrays for the data prop, nulls are just ignored anyway",
      "// we decide how to loop current bracket in parent scope, since we're not doing ranges here but subsets (e.g. months in a year, not months in 12 month",
      "// 31 days, so all months are same length",
      "// 5 weeks (starting from 1st of month, not weekdays, therefore we can compare groups evenly), so we have max week count for every month",
      "/**\n\t * @param EM_DateTime $start\n\t * @param EM_DateTime $end\n\t *\n\t * @return string\n\t */",
      "// same day, one date",
      "// get first/last day of weeks",
      "// calculate week number based on days of month, not weekday etc. so we have comparative 7-day chunks, otherwise some months may have 1 day and others",
      "// we need only munth number and name to subgroup it",
      "// here we need to do a litle post-processing so that we can avoid problems with weekdays, starting days etc. missing out entries within a month",
      "/**\n\t * Outputs a chart with the provided view settings, or a set of args to use.\n\t * @param array|string $view\n\t *\n\t * @return void\n\t */",
      "// not needed in json response",
      "/*\n$colors = array(\n\t'rgba(54, 162, 235, 0.75)',\n\t'rgba(255, 99, 132, 0.75)',\n\t'rgba(255, 159, 64, 0.75)',\n\t'rgba(255, 205, 86, 0.75)',\n\t'rgba(75, 192"
    ],
    "length": 58257,
    "preview": "<?php\nnamespace EM\\Admin;\nuse EM_DateTime;\n\nclass Dashboard {\n\t\n\tprotected static $footer_js;\n\t\n\tpublic static function init() {\n\t\tif( get_option('dbem_booking_charts_wpdashboard') ){\n\t\t\tadd_action( 'wp_dashboard_setup', array( get_called_class(), 'w",
    "file": "src/code/events-manager/admin/dashboard.php"
  },
  {
    "type": "php",
    "functions": [
      "em_options_save",
      "em_admin_email_test_ajax",
      "pre_option_dbem_mail_sender_name",
      "pre_option_dbem_mail_sender_address",
      "pre_option_dbem_rsvp_mail_send_method",
      "pre_option_dbem_rsvp_mail_port",
      "pre_option_dbem_smtp_encryption",
      "pre_option_dbem_smtp_autotls",
      "pre_option_dbem_rsvp_mail_SMTPAuth",
      "pre_option_dbem_smtp_host",
      "pre_option_dbem_smtp_username",
      "pre_option_dbem_smtp_password",
      "em_admin_option_default_ajax",
      "em_admin_options_reset_page",
      "em_admin_options_uninstall_page",
      "em_admin_options_page",
      "em_admin_option_box_image_sizes",
      "em_admin_option_box_email",
      "em_admin_option_box_caps",
      "em_admin_option_box_uninstall",
      "em_admin_option_box_data_privacy"
    ],
    "classes": [],
    "comments": [
      "//Function composing the options subpanel",
      "/* @var EM_Notices $EM_Notices */",
      "/*\n\t * Here's the idea, we have an array of all options that need super admin approval if in multi-site mode\n\t * since options are only updated here, ",
      "//Build the array of options here",
      "//TODO some more validation/reporting",
      "//clean up comma separated emails, no spaces needed",
      "//Do nothing, keep old setting.",
      "//en.wikipedia.org/wiki/Web_colors\">hex</a>').' '. esc_html__('This setting was not changed.', 'events-manager'), true);",
      "//TODO slashes being added?",
      "//TODO slashes being added?",
      "// check formatting mode and optimize autoloading of formats from wp_options, first we make it all auto-loadable",
      "// now we make only the ones that we're loading from files directly non-autoloadable",
      "// if set to 2 then we're just autoloading everything anyway",
      "//apply_caps_to_blog",
      "//normal blog role application",
      "//normal blog role application",
      "//add tab hash path to url if supplied",
      "//We have a go to uninstall",
      "//deactivate and go!",
      "//We have a go to uninstall",
      "//reset capabilities",
      "//go back to plugin options page",
      "//Cleanup Event Orphans",
      "//Firstly, get all orphans",
      "//go back to plugin options page",
      "//Force Update Recheck - Workaround for now",
      "//force recheck of plugin updates, to refresh dl links",
      "//Flag version checking to look at trunk, not tag",
      "//delete transients, and add a flag to recheck dev version next time round",
      "//import EM settings",
      "//upload uniquely named file to system for usage later",
      "//export EM settings",
      "//delete transients, and add a flag to recheck dev version next time round",
      "//update scripts that may need to run",
      "//add filters for options used in EM_Mailer so the current supplied ones are used",
      "//remove any php errors/warnings output",
      "//Check for uninstall/reset request",
      "//substitute dropdowns with input boxes for some situations to improve speed, e.g. if there 1000s of locations or users",
      "//TODO place all options into an array",
      "// TODO Move style in css -->",
      "/*\n\t\t\t<div  class=\"postbox \" >\n\t\t\t<div class=\"handlediv\" title=\"<?php __('Click to toggle', 'events-manager'); ?>\"><br /></div><h3><span><?php _e ( 'D",
      "/**\n * Meta options box for image sizes. Shared in both MS and Normal options page, hence it's own function \n */",
      "/**\n * Meta options box for email settings. Shared in both MS and Normal options page, hence it's own function \n */",
      "//smtp.gmail.com:587'.\", 'events-manager') );",
      "/**\n * Meta options box for user capabilities. Shared in both MS and Normal options page, hence it's own function \n */",
      "/* Event Capabilities */",
      "/*'read_events' => sprintf(__('User can view %s','events-manager'),__('events','events-manager')),*/",
      "/* Recurring Event Capabilties */",
      "/* Location Capabilities */",
      "/*'read_locations' => sprintf(__('User can view %s','events-manager'),__('locations','events-manager')),*/",
      "/* Category Capabilities */",
      "/* Booking Capabilities */",
      "//update scripts that may need to run",
      "/* @var WP_Site $WP_Site */",
      "/**\n * Meta options box for privacy and data protection rules for GDPR (and other dp laws) compliancy\n */",
      "//ec.europa.eu/justice/smedataprotect/index_en.htm\">GDPR</a>'); ?></p>",
      "//wp-events-plugin.com/documentation/data-privacy-gdpr-compliance/'); ?></p>"
    ],
    "length": 64186,
    "preview": "<?php\n//Function composing the options subpanel\nfunction em_options_save(){\n\tglobal $EM_Notices; /* @var EM_Notices $EM_Notices */\n\t/*\n\t * Here's the idea, we have an array of all options that need super admin approval if in multi-site mode\n\t * since",
    "file": "src/code/events-manager/admin/em-options.php"
  },
  {
    "type": "php",
    "functions": [
      "em_ms_upgrade",
      "em_ms_admin_options_page"
    ],
    "classes": [],
    "comments": [
      "//extra upgrade stuff",
      "/**\n * Displays network-related options in the network admin section\n * @uses em_options_save() to save settings \n */",
      "//Check for uninstall/reset request",
      "//TODO place all options into an array",
      "//Do some multisite checking here for reuse",
      "//MS Mode selection hiders",
      "// TODO Move style in css -->",
      "//make less changes for now, since we don't have any core tabs to add yet ?>",
      "//yoursite.com/events/<strong>event</strong>/subsite-event-slug/', EM_EVENT_SLUG );",
      "//yoursite.com/locations/<strong>location</strong>/subsite-location-slug/', EM_LOCATION_SLUG );",
      "//including shared MS/non-MS boxes"
    ],
    "length": 14804,
    "preview": "<?php\nfunction em_ms_upgrade( $blog_id ){\n\t?>\n\t<div class=\"wrap\">\t\t\n\t\t<div id='icon-options-general' class='icon32'><br /></div>\n\t\t<h2><?php esc_html_e('Update Network','events-manager'); ?></h2>\n\t\t<?php\n\t\t$site_updates = EM_Options::site_get('update",
    "file": "src/code/events-manager/admin/em-ms-options.php"
  },
  {
    "type": "php",
    "functions": [
      "em_admin_menu",
      "em_admin_dashicon",
      "em_ms_admin_menu",
      "em_admin_init",
      "em_admin_warnings",
      "em_plugin_action_links",
      "em_updates_check",
      "em_user_action_links",
      "init",
      "admin_enqueue_scripts",
      "review_popup",
      "output_js",
      "ajax"
    ],
    "classes": [
      "EM_Admin_Modals"
    ],
    "comments": [
      "//Count pending bookings",
      "//Count pending events",
      "//TODO Add flexible permissions",
      "//Count pending recurring events",
      "//TODO Add flexible permissions",
      "// Add a submenu to the custom top-level menu:",
      "//If multisite global with locations set to be saved in main blogs we can force locations to be created on the main blog only",
      "//We have to modify the menus manually",
      "//go through the menu array and modify the events menu if found",
      "//Submenu Event Item",
      "//go through the menu array and modify the events menu if found",
      "//Submenu Recurring Event Item",
      "//go through the menu array and modify the events menu if found",
      "/* Hack! Add location/recurrence isn't possible atm so this is a workaround */",
      "//3//wAAAAAAIOYA//3//wAB/+MaBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAEAAIXyBpNfDzz1AAsCAAAAAADQMTPCAAAAANAxM8IAAP/6AeYBxgAAAAgAAgAAAAAAAAABAAAB4P/gAAACAA",
      "//3//wAAAAAAIOYA//3//wAB/+MaBAADAAEAAAAAAAAAAAAAAAEAAf//AA8AAQAAAAAAAAAAAAIAADc5AQAAAAABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAADQAz//oB5g",
      "//in MS global mode and locations are stored in the main blog, then a user must have at least a subscriber role",
      "/**\n * Generate warnings and notices in the admin area\n */",
      "//If we're editing the events page show hello to new user",
      "// Disable Hello to new user if requested",
      "//FIXME update welcome msg with good links",
      "//wp-events-plugin.com/documentation/getting-started-guide/?utm_source=em&utm_medium=plugin&utm_content=installationlink&utm_campaign=plugin_links', E",
      "//If events page couldn't be created or is missing",
      "//wordpress.org/extend/plugins/events-manager-wpml/', esc_url(add_query_arg(array('disable_em_wpml_warning'=>1)))); ?></p>",
      "//wp-events-plugin.com/blog/2014/12/05/bye-timthumb/\">please see this post</a> for more information on how this may affect you and what options are av",
      "//Warn about EM page edit",
      "/**\n * Settings link in the plugins page menu\n * @param array $links\n * @param string $file\n * @return array\n */",
      "//Updates and Dev versions",
      "// Check if the transient contains the 'checked' information",
      "//only bother if we're checking for dev versions",
      "//check WP repo for trunk version, other EM-related plugins on .org can hook here to make the best of our admin setting option",
      "//plugins.svn.wordpress.org/'.$org_slug.'/trunk/'.$org_slug.'.php');",
      "//we have a version number!",
      "//wordpress.org/extend/plugins/'.$org_slug.'/';",
      "//downloads.wordpress.org/plugin/'.$org_slug.'.zip';",
      "//ps.w.org/'.$org_slug.'/assets/icon-128x128.png');",
      "//ps.w.org/'.$org_slug.'/assets/icon-128x128.png',",
      "//ps.w.org/'.$org_slug.'/assets/icon-256x256.png'",
      "// Hook into the plugin update check and mod for dev version",
      "// admin modal notices",
      "// show review nudge",
      "// enqueue script and load popup action",
      "// check admin data and see if show data is still enabled",
      "//wordpress.org/support/plugin/events-manager/reviews/?filter=5#new-topic-0\" class=\"button button-primary input\" target=\"_blank\" style=\"margin:10px au",
      "// send AJAX to close",
      "// send AJAX to close",
      "// disable the modal so it's not shown again",
      "// limit popup to EM pages only"
    ],
    "length": 25178,
    "preview": "<?php\n//Admin functions\nfunction em_admin_menu(){\n\tglobal $menu, $submenu, $pagenow;\n\t//Count pending bookings\t\n   \tif( get_option('dbem_rsvp_enabled') ){\n\t\t$bookings_num = '';\n\t\t$bookings_pending_count = apply_filters('em_bookings_pending_count',0);",
    "file": "src/code/events-manager/admin/em-admin.php"
  },
  {
    "type": "php",
    "functions": [
      "em_admin_ms_locations",
      "em_admin_locations",
      "em_admin_location"
    ],
    "classes": [],
    "comments": [
      "/**\n * Looks at the request values, saves/updates and then displays the right menu in the admin\n * @return null\n */",
      "//TODO EM_Location is globalized, use it fully here",
      "// no action, just a locations list"
    ],
    "length": 1243,
    "preview": "<?php\n/**\n * Looks at the request values, saves/updates and then displays the right menu in the admin\n * @return null\n */\nfunction em_admin_ms_locations() {  \n\t//TODO EM_Location is globalized, use it fully here\n\tglobal $EM_Location;\n\t//Take actions\n",
    "file": "src/code/events-manager/admin/em-ms-locations.php"
  },
  {
    "type": "php",
    "functions": [
      "em_admin_help_page"
    ],
    "classes": [],
    "comments": [
      "/**\n * Display function for the support page. here we can give links to forums and special upgrade instructions e.g. migration features \n */",
      "//wp-events-plugin.com/documentation/getting-started-guide/\">getting started guide</a>.</li>",
      "//wp-events-plugin.com/tutorials/\">tutorials</a>.</li>",
      "//wp-events-plugin.com/documentation/faq/\">FAQ</a> for general questions and <a href=\"http://wp-events-plugin.com/documentation/troubleshooting/\">Trou",
      "//wordpress.org/tags/events-manager?forum_id=10\">support forums</a> as others may be experiencing the same issues as you. For faster support via priva",
      "//wp-events-plugin.com/forums/\">support forums</a>.",
      "//Is this a previously imported installation?",
      "//downloads.wordpress.org/plugin/events-manager.2.2.2.zip'>dowload a copy of version 2.2</a></li>"
    ],
    "length": 5143,
    "preview": "<?php \n/**\n * Display function for the support page. here we can give links to forums and special upgrade instructions e.g. migration features \n */\nfunction em_admin_help_page(){\n\tglobal $wpdb;\n\t?>\n\t<div class=\"wrap\">\n\t\t<h1><?php _e('Getting Help for",
    "file": "src/code/events-manager/admin/em-help.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "privacy_policy_content",
      "register_eraser",
      "erase_bookings",
      "erase_recurring_events",
      "erase_events",
      "erase_locations",
      "register_exporter",
      "export_cleanup",
      "export_user",
      "export_bookings",
      "export_recurring_events",
      "export_events",
      "export_locations",
      "get_cpts",
      "get_bookings"
    ],
    "classes": [
      "EM_Data_Privacy"
    ],
    "comments": [
      "/*\n * This file deals with new privacy tools included in WP 4.9.6 and in line with aiding users with conforming to the GPDR rules.\n * Note that consen",
      "//policies.google.com/privacy'",
      "//in this case we don't register location deletion because we only need to handle anonymous events, locations submitted anonymously shouldn't have any",
      "//is user or no-user?",
      "//we're only deleting anonymous bookings, and letting WP handle user/booking deletion the traditional way for registered accounts",
      "//get items to erase",
      "// Tell core if we have more comments to work on still",
      "// always false in this example",
      "// no messages in this example",
      "//is user or no-user?",
      "//we're only deleting anonymous events, and letting WP handle CPT deletion the traditional way for registered accounts",
      "//get event IDs submitted by user or \"anonymously\" by email",
      "//erase the location first",
      "//prior to 5.9.3 locations submitted alongside anonymous events didn't store email info, so for older locations we can only assume if the location is ",
      "//depending on settings delete location only if it has no other events (eventually if we're deleting the last event of this user with the same locatio",
      "//now erase the event",
      "// Tell core if we have more comments to work on still",
      "// always false in this example",
      "// no messages in this example",
      "/* @var EM_Location $EM_Location */",
      "// Tell core if we have more comments to work on still",
      "// always false in this example",
      "// no messages in this example",
      "//is user or no-user?",
      "//we add to the WP User section",
      "//check if we're only exporting bookings to those who made anonymous bookings",
      "//is user or no-user?",
      "//return if user is registered and we're only exporting anon bookings",
      "//replace ID with booking ID",
      "// replace this with assoc array of name/value key arrays",
      "/* @var EM_Ticket_Booking $EM_Ticket_Booking */",
      "//booking notes - can be exempt with a filter since maybe notes have private info",
      "//could be used for cross-referencing and add-ing other groups e.g. Multiple Bookings in Pro",
      "//if we didn't reach limit of bookings then we must be done",
      "//is user or no-user?",
      "//check if we're only exporting events to those who submitted anonymously",
      "//return if user is registered and we're only exporting anon events",
      "//prepare some location stuff for use within events",
      "//replace ID with booking ID",
      "// replace this with assoc array of name/value key arrays",
      "//replace ID with booking ID",
      "// replace this with assoc array of name/value key arrays",
      "//get event IDs submitted by user or \"anonymously\" by email",
      "//put this location as a new export item",
      "//could be used for cross-referencing and add-ing other groups e.g. Multiple Bookings in Pro",
      "/* @var EM_Ticket $EM_Ticket */",
      "//could be used for cross-referencing and add-ing other groups e.g. Multiple Bookings in Pro",
      "//if we didn't reach limit of bookings then we must be done",
      "//is user or no-user?",
      "//replace ID with booking ID",
      "// replace this with assoc array of name/value key arrays",
      "//Locations - previous to 5.9.4 locations submitted anonymously did nint include",
      "/* @var EM_Location $EM_Location */",
      "//could be used for cross-referencing and add-ing other groups e.g. Multiple Bookings in Pro",
      "//if we didn't reach limit of bookings then we must be done",
      "//is user or no-user?",
      "//get event IDs submitted by user or \"anonymously\" by email",
      "//if user ever submitted anonymous events with same email, we also process these",
      "//is user or no-user?",
      "//find any booking that may have their email, anonymous or previous email address.",
      "/*\nadd_action('admin_init', function(){\n\t$data = EM_Data_Privacy::exporter('subscriber@netweblogic.com');\n\techo \"<table>\";\n\tforeach( $data['data'] as "
    ],
    "length": 27627,
    "preview": "<?php\n/*\n * This file deals with new privacy tools included in WP 4.9.6 and in line with aiding users with conforming to the GPDR rules.\n * Note that consent mechanisms are not included here and will be baked directly into the templates or Pro bookin",
    "file": "src/code/events-manager/admin/em-data-privacy.php"
  },
  {
    "type": "php",
    "functions": [
      "em_docs_init",
      "em_docs_placeholders"
    ],
    "classes": [],
    "comments": [
      "//wp-events-plugin.com/documentation/event-search-attributes/event-location-grouping-ordering/\">grouping documentation</a> for more information.', 'de",
      "//wp-events-plugin.com/documentation/event-search-attributes/event-location-grouping-ordering/\">grouping documentation</a> for more information.', 'de",
      "//countrycode.org/\">countrycode.org</a>, can be comma-separated e.g. US,GB,ES'),",
      "//wp-events-plugin.com/documentation/event-search-attributes/event-location-grouping-ordering/\">grouping documentation</a> for more information.', 'de",
      "//wp-events-plugin.com/documentation/event-search-attributes/event-location-grouping-ordering/\">grouping documentation</a> for more information.', 'de",
      "//codex.wordpress.org/Function_Reference/get_terms\">WordPress get_terms() Codex</a> for a list of possible search attributes/arguments.'),",
      "//codex.wordpress.org/Function_Reference/get_terms\">WordPress get_terms() Codex</a> for a list of possible search attributes/arguments.'),",
      "//The object is commonly shared by all, so entries above overwrite entries here",
      "//en.support.wordpress.com/splitting-content/more-tag/\">more tag</a> to your event description, only the content before this tag will show.' ),",
      "//wp-events-plugin.com/documentation/location-types/\">See our documentation for more information</a>, as each location type may display different info",
      "//www.php.net/manual/en/function.date.php\">PHP date syntax format characters</a> along with placeholders.',",
      "//momentjs.com/docs/#/displaying/\"> documented Moment JS formatting syntax</a>.'),",
      "//momentjs.com/docs/#/displaying/\"> documented Moment JS formatting syntax</a>.'),",
      "//wp-events-plugin.com/documentation/event-attributes/\">our online documentation</a> for more info on attributes.',",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.support.wordpress.com/splitting-content/more-tag/\">more tag</a> to your location description, only the content before this tag will show.' ),",
      "//wp-events-plugin.com/documentation/event-attributes/\">our online documentation</a> for more info on attributes.',",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//en.wikipedia.org/wiki/Webcal\">webcal:// protocol</a>, which will open up various calendar apps automatically including iCalendar, Outlook and Google",
      "//wp-events-plugin.com/features/') ),",
      "//wp-events-plugin.com/features/') ),",
      "//wp-events-plugin.com/features/') ),",
      "//wp-events-plugin.com/features/')), //coupons too!",
      "//wp-events-plugin.com/documentation/using-template-files/\">Using Template Files</a> for more information)' ),",
      "//wp-events-plugin.com/features/'),",
      "//wp-events-plugin.com/features/'),",
      "//TODO add capabilites explanations"
    ],
    "length": 50995,
    "preview": "<?php\n\nfunction em_docs_init($force_init = false){\n\tglobal $pagenow;\n\tif( ($pagenow == 'edit.php' && !empty($_GET['page']) && $_GET['page']=='events-manager-help' && class_exists('EM_Event')) || $force_init){\n\t\tadd_action('wp_head', 'emd_head');\n\t\t//",
    "file": "src/code/events-manager/admin/em-docs.php"
  },
  {
    "type": "php",
    "functions": [
      "em_admin_actions_bookings",
      "em_bookings_page",
      "em_bookings_dashboard",
      "em_bookings_event",
      "em_bookings_ticket",
      "em_bookings_single",
      "em_bookings_person",
      "em_printable_booking_report"
    ],
    "classes": [
      "for"
    ],
    "comments": [
      "/**\n * Deprecated - see em-actions.php - this will be removed at some point in 6.0\n * Check if there's any admin-related actions to take for bookings.",
      "/**\n * Decide what content to show in the bookings section. \n */",
      "//First any actions take priority",
      "//XSS fix just in case here too",
      "//actions not starting with booking_",
      "/**\n * Generates the bookings dashboard, showing information on all events\n */",
      "/**\n * Shows all booking data for a single event \n */",
      "//check that user can access this page",
      "// inverted to help IDEs ?>",
      "//support for legacy template ?>",
      "/**\n * Shows a ticket view\n */",
      "//check that user can access this page",
      "// inverted to help IDEs ?>",
      "/**\n * Shows a single booking for a single person. \n */",
      "/* @var $EM_Booking EM_Booking */",
      "//check that user can access this page",
      "/* Show booked tickets in this booking, we'll add on the unbooked tickets here to prevent redundant code */",
      "// we'll use this ordered with all tickets",
      "/* @var $EM_Ticket_Bookings EM_Ticket_Bookings */",
      "// sanitize for output",
      "// Use the following for adding extra info, most appropriate place is within the edit area",
      "/* Keeping as legacy support for EM Pro < v3 */",
      "// use the following",
      "/* @var EM_Ticket_Booking $EM_Ticket_Booking */",
      "// create a consistent naming structure for post vars, others can/should add stuff to the uuid part of each ticket booking",
      "// want $ticket_attendee_num? count the tickets",
      "// Use the following for adding extra info, most appropriate place is within the edit area",
      "//we should now have an array of information including base price, taxes and post/pre tax discounts",
      "//default behavior ?>",
      "//do your own thing, e.g. pro ?>",
      "/**\n * Shows all bookings made by one person.\n */",
      "//check that user can access this page"
    ],
    "length": 34125,
    "preview": "<?php\n/**\n * Deprecated - see em-actions.php - this will be removed at some point in 6.0\n * Check if there's any admin-related actions to take for bookings. All actions are caught here.\n * @return null\n * @todo remove in 6.0\n */\nfunction em_admin_act",
    "file": "src/code/events-manager/admin/em-bookings.php"
  }
]