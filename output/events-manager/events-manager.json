[
  {
    "type": "php",
    "functions": [],
    "classes": [],
    "comments": [
      "//this will hold some stuff for updating",
      "//taken from EM_Event onstructor",
      "//Backward compatibility (since 3.0.3), using 0 makes more sense due to date() function"
    ],
    "length": 301,
    "preview": "<?php\n//this will hold some stuff for updating\n\n//taken from EM_Event onstructor\n$event->recurrence_byday = ( empty($event['recurrence_byday']) || $event['recurrence_byday'] == 7 ) ? 0:$event['recurrence_byday']; //Backward compatibility (since 3.0.3",
    "file": "src/code/events-manager/em-upgrade.php"
  },
  {
    "type": "php",
    "functions": [
      "em_bbp_get_caps_for_role"
    ],
    "classes": [],
    "comments": [
      "/**\n * bbPress 2.2 uses dynamic roles, and hooks very early into WP_Roles and the option_wp_user_roles section.\n * This is done to override the defaul",
      "//get the non-dynamic role from the wp_options table",
      "//loop through the original role if it exists and add our em caps to the bp role"
    ],
    "length": 1057,
    "preview": "<?php\n/**\n * bbPress 2.2 uses dynamic roles, and hooks very early into WP_Roles and the option_wp_user_roles section.\n * This is done to override the default role and apply relevant caps, but then deletes our custom caps as a result.\n * This function",
    "file": "src/code/events-manager/em-bbpress.php"
  },
  {
    "type": "php",
    "functions": [
      "wp_events_plugin_after_setup_theme",
      "wp_events_plugin_init",
      "em_gutenberg_support",
      "supported_event_custom_fields",
      "supported_location_custom_fields",
      "supported_custom_fields",
      "em_map_meta_cap"
    ],
    "classes": [],
    "comments": [
      "//Custom Post Type and Taxonomy Names, overridable in wp-config.php, not adviseable but the point is flexibility if you know what you're doing ;)",
      "/*\n * This checks that you have post thumbnails enabled, if not, it enables it. \n * You can always disable this by adding remove_action('after_setup_t",
      "//either leave as true, or add our cpts to this",
      "//add to featured image post types for specific themes",
      "//need to add this for themes that don't have it.",
      "//This bit registers the CPTs",
      "//we assume the admin url is absolute with at least one querystring",
      "//'update_count_callback' => '',",
      "//'show_tagcloud' => true,",
      "//'show_in_nav_menus' => true,",
      "//'update_count_callback' => '',",
      "//'show_tagcloud' => true,",
      "//'show_in_nav_menus' => true,",
      "//if in MS Global mode with locations shown on main blog, then the ui shouldn't be available on network blogs:",
      "//gutenberg support - define EM_GUTENBERG in your wp-config.php page to enable",
      "//Now register posts, but check slugs in case of conflicts and reorder registrations",
      "//Now register posts, but check slugs in case of conflicts and reorder registrations",
      "//Post Customization",
      "/* Handle event reads */",
      "//check for revisions and deal with non-event post types",
      "//continue with getting post type and assigning caps",
      "/* Set an empty array for the caps. */",
      "//Filter according to event caps",
      "//check for revisions and deal with non-event post types",
      "//continue with getting post type and assigning caps",
      "/* Set an empty array for the caps. */",
      "//Filter according to recurring_event caps",
      "//check for revisions and deal with non-location post types",
      "//continue with getting post type and assigning caps",
      "/* Set an empty array for the caps. */",
      "//Filter according to location caps",
      "/* Return the capabilities required by the user. */"
    ],
    "length": 19655,
    "preview": "<?php\n//Custom Post Type and Taxonomy Names, overridable in wp-config.php, not adviseable but the point is flexibility if you know what you're doing ;)\nif( !defined('EM_POST_TYPE_EVENT') ) define('EM_POST_TYPE_EVENT','event');\nif( !defined('EM_POST_T",
    "file": "src/code/events-manager/em-posts.php"
  },
  {
    "type": "php",
    "functions": [
      "em_content",
      "em_add_content_filter",
      "em_remove_content_filter",
      "add_content_filter_template_include",
      "em_content_page_title",
      "em_content_wp_title",
      "em_content_wpseo_title",
      "em_wp_the_title",
      "em_get_page_type"
    ],
    "classes": [],
    "comments": [
      "/*\n * This file contains the event related hooks in the front end, as well as some event template tags\n */",
      "/**\n * Filters for page content and if an event replaces it with the relevant event data.\n * @param $data\n * @return string\n */",
      "// check if we're in the loop... since this may break some themes, we're introducing it as a constant for themes that cause issues vs. breaking themes",
      "//fix for any other plugins calling the_content outside the loop",
      "//Events for a specific day",
      "// Multiple events page",
      "//Intercept search request, if defined",
      "//load the search form and pass on custom arguments (from settings page)",
      "// prevent search from generating its own view container",
      "//Intercept search request, if defined",
      "//load the search form and pass on custom arguments (from settings page)",
      "// prevent search from generating its own view container",
      "//remove date and category",
      "//AJAX wrapper close",
      "//AJAX wrapper close",
      "//If disable rewrite flag is on, then we need to add a placeholder here",
      "//Now, we either replace CONTENTS or just replace the whole page",
      "//wp-events-plugin.com\" style=\"color:#999;\" target=\"_blank\">Events Manager</a></p>';",
      "//add the_content filter AFTER wp_head functions have run, so we don't interfere with plugins like WP SEO and other meta-related plugins that make use",
      "// only add this one",
      "//remember that this gets removed by taxonomy pages showing a single taxonomy page, so careful if changing the priority",
      "/**\n * @return void\n */",
      "// add the_content earlier than above in FSE situations",
      "/**\n * Filter for titles when on event pages\n * @param $data\n * @return string\n */",
      "//fix for any other plugins calling the_content outside the loop",
      "//override the titles with this filter if needed, preventing the following code from being run",
      "//leave untouched by default",
      "//We only support dates for the calendar day list title, so we do a simple filter for the supplied calendar_day",
      "// matches all PHP date and time placeholders",
      "// single event page",
      "//fix for any other plugins calling the_content outside the loop",
      "//single event and location page titles get parsed for formats",
      "//we only rewrite titles on events and locations pages since they are 'special'",
      "// Determines position of the separator and direction of the breadcrumb",
      "// sep on right, so reverse the order",
      "//override other plugin SEO due to way EM works.",
      "/**\n * Yoast SEO friendly short circuit, fixes issues in Yoast 14 update by changing the $sep function into the actual separator.\n * @param $title\n * ",
      "/**\n * Makes sure we're in \"THE Loop\", which is determinied by a flag set when the_post() (start) is first called, and when have_posts() (end) returns",
      "//fix for any other plugins calling the_content outside the loop",
      "//because we're only editing the main title of the page here, we make sure we're in the main query"
    ],
    "length": 16931,
    "preview": "<?php\n/*\n * This file contains the event related hooks in the front end, as well as some event template tags\n */\n\n/**\n * Filters for page content and if an event replaces it with the relevant event data.\n * @param $data\n * @return string\n */\nfunction",
    "file": "src/code/events-manager/em-events.php"
  },
  {
    "type": "php",
    "functions": [
      "em_get_calendar_shortcode",
      "em_get_gcal_shortcode",
      "em_get_locations_map_shortcode",
      "em_get_events_map_shortcode",
      "em_get_events_list_shortcode",
      "em_get_events_list_grouped_shortcode",
      "em_get_event_shortcode",
      "em_get_locations_list_shortcode",
      "em_get_location_shortcode",
      "em_get_categories_shortcode",
      "em_get_event_category_shortcode",
      "em_get_events_page_shortcode",
      "em_get_link_shortcode",
      "em_get_url_shortcode",
      "em_get_rss_link_shortcode",
      "em_get_rss_url_shortcode",
      "em_get_event_form_shortcode",
      "em_get_event_search_form_shortcode",
      "em_get_location_search_form_shortcode",
      "em_get_my_bookings_shortcode"
    ],
    "classes": [],
    "comments": [
      "//TODO add a shortcode to link for a specific event, e.g. [event id=x]text[/event]",
      "/**\n * Returns the html of an events calendar with events that match given query attributes. Accepts any event query attribute.\n * @param array $atts\n",
      "//www.google.com/calendar/images/ext/gc_button6.gif':'http://www.google.com/calendar/images/ext/gc_button6.gif';",
      "//www.google.com/calendar/render?cid='.urlencode(trailingslashit(get_home_url()).'events.ics').'\" target=\"_blank\"><img src=\"'.esc_url($img_url).'\" alt",
      "/**\n * Generates a map of locations that match given query attributes. Accepts any location query attributes. \n * @param array $args\n * @return string",
      "//get dimensions with px or % added in",
      "//assign random number for element id reference",
      "//add JSON style to map",
      "//deprecate this... confusing for WordPress",
      "/**\n * Generates a map of locations that match given query attributes. Accepts any location query attributes.\n * @param array $args\n * @return string\n",
      "//get dimensions with px or % added in",
      "//assign random number for element id reference",
      "//add JSON style to map",
      "/**\n * Shows a list of events according to given specifications. Accepts any event query attribute.\n * @param array $args\n * @param string $format\n * ",
      "//shortcode doesn't accept html",
      "/**\n * Creates a grouped list of events by year, month, week or day\n * @since 4.213\n * @param array $args\n * @param string $format\n * @return string\n ",
      "//shortcode doesn't accept html",
      "/**\n * Shows a list of events according to given specifications. Accepts any event query attribute.\n * @param array $atts\n * @return string\n */",
      "//shorcode doesn't accept html",
      "//no specific event or post id supplied, check globals",
      "/**\n * Returns list of locations according to given specifications. Accepts any location query attribute.\n */",
      "//shorcode doesn't accept html",
      "//close AJAX wrapper",
      "/**\n * Shows a single location according to given specifications. Accepts any event query attribute.\n * @param array $atts\n * @return string\n */",
      "//shorcode doesn't accept html",
      "//no specific location or post id supplied, check globals",
      "//shorcode doesn't accept html",
      "//close AJAX wrapper",
      "/**\n * Shows a single location according to given specifications. Accepts any event query attribute.\n * @param array $atts\n * @return string\n */",
      "//shorcode doesn't accept html",
      "/**\n * DO NOT DOCUMENT! This should be replaced with shortcodes events-link and events_uri\n * @param array $atts\n * @return string\n */",
      "/**\n * Shortcode for a link to events page. Default will show events page title in link text, if you use [events_link]text[/events_link] 'text' will b",
      "/**\n * Returns the uri of the events page only\n * @return string\n */",
      "/**\n * CHANGE DOCUMENTATION! if you just want the url you should use shortcode events_rss_uri\n * @param array $atts\n * @return string\n */",
      "/**\n * Returns the uri of the events rss page only, takes no attributes.\n * @return string\n */",
      "/**\n * Creates a form to submit events with\n * @param array $atts\n * @return string\n */",
      "/**\n * Creates a form to search events with\n * @param array $atts\n * @return string\n */",
      "/**\n * Creates a form to search locations with\n * @param array $atts\n * @return string\n */",
      "/**\n * Shows the list of bookings the user has made. Whilst maybe useful to some, the preferred way is to create a page and assign it as a my bookings"
    ],
    "length": 16580,
    "preview": "<?php\n//TODO add a shortcode to link for a specific event, e.g. [event id=x]text[/event]\n/**\n * Returns the html of an events calendar with events that match given query attributes. Accepts any event query attribute.\n * @param array $atts\n * @return ",
    "file": "src/code/events-manager/em-shortcode.php"
  },
  {
    "type": "php",
    "functions": [
      "em_ical",
      "em_ical_item",
      "em_mb_ical_wordwrap"
    ],
    "classes": [],
    "comments": [
      "/**\n\t * generates an ical feed on init if url is correct\n\t */",
      "//check if this is a calendar request for all events",
      "/**\n\t * Generates an ics file for a single event \n\t */",
      "//check if we're outputting an ical feed",
      "//only output the ical if we have a match from above",
      "//send headers and output ical",
      "//no item exists, so redirect to original URL",
      "/**\n\t * A utf-8 safe wordwrap function, avoiding CRLF issues with Chinese and other multi-byte characters.\n\t * @param string $string\n\t * @return strin"
    ],
    "length": 3103,
    "preview": "<?php\n\t/**\n\t * generates an ical feed on init if url is correct\n\t */\n\tfunction em_ical( ){\n\t\t//check if this is a calendar request for all events\n\t\tif ( preg_match('/events.ics(\\?.+)?$/', $_SERVER['REQUEST_URI']) || $_SERVER['REQUEST_URI'] == '/?ical",
    "file": "src/code/events-manager/em-ical.php"
  },
  {
    "type": "php",
    "functions": [
      "wpfc_em_content",
      "wpfc_em_calendar_search",
      "wpfc_em_ajax",
      "wpfc_em_qtip_content",
      "wpmfc_em_taxonomy_args",
      "start_el",
      "wpfc_em_fullcalendar_args"
    ],
    "classes": [
      "WPFC_EM_Categories_Walker"
    ],
    "comments": [
      "/**\n * Integration with WP FullCalendar - http://wordpress.org/plugins/wp-fullcalendar/\n * Initiallizes EM stuff by overriding some shortcodes, filter",
      "//overrides the ajax calls for event data",
      "//only needed during ajax requests anyway",
      "//overrides some EM stuff with FullCalendar depending on some extra settings",
      "/**\n * Replaces the event page with the FullCalendar if requested in settings\n * @param unknown_type $page_content\n * @return Ambigous <mixed, string>",
      "//Now, we either replace CONTENTS or just replace the whole page",
      "/**\n * Adds extra non-taxonomy fields to the calendar search\n * @param array $args\n */",
      "//get the counties from locations table",
      "//get the counties from locations table",
      "//get the counties from locations table",
      "//get the counties from locations table",
      "//this never worked because the action was never correctly called, until we add a setting for this in the options page, uncomment the line below or pa",
      "//add_action('wpfc_calendar_search','wpfc_em_calendar_search', 10, 1);",
      "/**\n * Replaces the normal WPFC ajax and uses the EM query system to provide event specific results. \n */",
      "//no need for these two, they are the original month and year requested",
      "//get the month/year between the start/end dates and feed these to EM",
      "//since wpfc handles date sorting we only care about time and name ordering here",
      "//WPFC always has 6 weeks",
      "//long events are enabled, unless explicitly told not to in the shortcode",
      "//do some corrections for EM query",
      "//get day link template",
      "//don't use EM_URI here, since ajax calls this before EM_URI is defined.",
      "//don't use EM_URI here, since ajax calls this before EM_URI is defined.",
      "/* @var $EM_Event EM_Event */",
      "/* @var $EM_Category EM_Category */",
      "//count events for all days this event may span",
      "//on all day events the end date/time is next day of end date at 00:00:00 - see end attribute on http://fullcalendar.io/docs/event_data/Event_Object/",
      "//if long events aren't wanted, make the end date same as start so it shows this way on the calendar",
      "/**\n * Overrides the original qtip_content function and provides Event Manager formatted event information\n * @param string $content\n * @return string",
      "/**\n * Changes the walker object so we can inject color values into the options\n * @param array $args\n * @param object $taxonomy\n * @return WPFC_EM_Ca",
      "/**\n * Copy and alteration of the Walker_CategoryDropdown object\n * @author marcus\n *\n */",
      "/**\n\t * @see Walker::start_el()\n\t */",
      "/**\n * Deprecated - changed default taxonomy defenitions to EM taxonomies, not needed as automatically deduced. If you really need this, use\n * add_fi"
    ],
    "length": 14398,
    "preview": "<?php\n/**\n * Integration with WP FullCalendar - http://wordpress.org/plugins/wp-fullcalendar/\n * Initiallizes EM stuff by overriding some shortcodes, filters and actions in the WP FullCalendar plugin\n * Admin functions are located in admin/wpfc-admin",
    "file": "src/code/events-manager/em-wpfc.php"
  },
  {
    "type": "php",
    "functions": [
      "em_init_actions_start",
      "em_init_actions",
      "em_ajax_bookings_table",
      "em_ajax_bookings_table_row",
      "em_ajax_search_and_pagination",
      "em_ajax_geocoding_search"
    ],
    "classes": [],
    "comments": [
      "/**\n * Performs actions on init. This works for both ajax and normal requests, the return results depends if an em_ajax flag is passed via POST or GET",
      "//NOTE - No EM objects are globalized at this point, as we're hitting early init mode.",
      "//TODO Clean this up.... use a uniformed way of calling EM Ajax actions",
      "//we're looking for locations in this context, so locations necessary",
      "//grouping will generally produce much faster processing",
      "//prevent search from loading up again",
      "//Load the event object, with saved event if requested",
      "//Save Event, only via BP or via [event_form]",
      "//Set server timezone to UTC in case other plugins are doing something naughty",
      "//Grab and validate submitted data",
      "//EM_Event gets the event if submitted via POST and validates it (safer than to depend on JS)",
      "//Set server timezone back, even though it should be UTC anyway",
      "//Detach event and move on",
      "//Detach event and move on",
      "//Load the location object, with saved event if requested",
      "//Grab and validate submitted data",
      "//EM_location gets the location if submitted via POST and validates it (safer than to depend on JS)",
      "//get object or objects",
      "// 'label' is now for backwards compatibility",
      "//Load the booking object, with saved booking if requested",
      "//Load the event object, with saved event if requested",
      "//register the user - or not depending - according to the booking",
      "//delete registered user temp info (if exists)",
      "// get first ticket that's available",
      "//get first ticket in this event and book one place there. similar to getting the form values in EM_Booking::get_post_values()",
      "// admins also cannot cancel their own bookings this way, only via admin ui",
      "//TODO user action shouldn't check permission, booking object should.",
      "//Event Admin only actions",
      "//Just do it here, since we may be deleting bookings of different events.",
      "//FIXME not adhereing to object's feedback or error message, like other bits in this file.",
      "//TODO multiple deletion won't work in ajax",
      "//save just the booking meta, avoid extra unneccesary hooks and things to go wrong",
      "//add this for HTTP -> HTTPS requests which assume it's a cross-site request",
      "//add this for HTTP -> HTTPS requests which assume it's a cross-site request",
      "//AJAX call for searches",
      "//default search arts",
      "//quick shortcut for quick html form manipulation",
      "//quick shortcut for quick html form manipulation",
      "//quick shortcut for quick html form manipulation",
      "//EM Ajax requests require this flag.",
      "//Specific Oject Ajax",
      "//generate bookings export according to search request",
      "// UTF-8 for MS Excel (a little hacky... but does the job)",
      "//if you're having server memory issues, try messing with this number",
      "/* @var EM_Booking $EM_Booking */",
      "//Display all values",
      "/* @var EM_Ticket_Bookings $EM_Ticket_Bookings */",
      "// since we're splitting by ticket type, we don't need individual EM_Ticket_Booking objects, but the wrapper object",
      "/**\n * New action to handle init of EM. It is now being fired in wp_loaded rather than init, the below will either queue up the em_init_actions_start(",
      "/**\n * Handles AJAX Bookings admin table filtering, view changes and pagination\n */",
      "//Event Admin only actions",
      "/**\n * Handles AJAX Searching and Pagination for events, locations, tags and categories\n */",
      "// new and default way of doing things",
      "// new and default way of doing things",
      "// so eventful searches show upcoming event locations only",
      "//if successful, this template overrides the settings and defaults, including search",
      "//if successful, this template overrides the settings and defaults, including search",
      "//if successful, this template overrides the settings and defaults, including search",
      "//if successful, this template overrides the settings and defaults, including search",
      "/*\nAdded in dev 5.4.4.2 but may delete in favour of Google autocomplete service\nfunction em_ajax_geocoding_search(){\n\t//GeoNames\n\tif( !empty($_REQUEST"
    ],
    "length": 39541,
    "preview": "<?php\n/**\n * Performs actions on init. This works for both ajax and normal requests, the return results depends if an em_ajax flag is passed via POST or GET.\n */\nfunction em_init_actions_start() {\n\tglobal $wpdb,$EM_Notices,$EM_Event; \n\tif( defined('D",
    "file": "src/code/events-manager/em-actions.php"
  },
  {
    "type": "php",
    "functions": [
      "em_install",
      "em_update_required_notification",
      "em_upgrading_in_progress_notification",
      "em_sort_out_table_nu_keys",
      "em_check_utf8mb4_tables",
      "em_create_events_table",
      "em_create_events_meta_table",
      "em_create_locations_table",
      "em_create_bookings_table",
      "em_create_bookings_meta_table",
      "em_create_tickets_table",
      "em_create_tickets_bookings_table",
      "em_create_tickets_bookings_meta_table",
      "em_add_options",
      "em_upgrade_current_installation",
      "v6012_sql_check_error",
      "em_set_mass_caps",
      "em_set_capabilities",
      "em_create_events_page",
      "em_migrate_datetime_timezones",
      "em_migrate_get_tz_transitions"
    ],
    "classes": [],
    "comments": [
      "//switch to blog language (if applicable)",
      "//Won't upgrade <4.300 anymore",
      "//wordpress.org/extend/plugins/events-manager/download/\">here</a> before upgrading to this version.</strong></p></div><?php",
      "// Creates the events table if necessary",
      "//in case for some reason the user changed global settings",
      "//in case for some reason the user changes global settings in the future",
      "//New install, or Migrate?",
      "//set caps and options",
      "//last but not least, flush the toilet",
      "//now that we're done, switch back to current language (if applicable)",
      "/**\n * Magic function that takes a table name and cleans all non-unique keys not present in the $clean_keys array. if no array is supplied, all but th",
      "/**\n * Since WP 4.2 tables are created with utf8mb4 collation. This creates problems when storing content in previous utf8 tables such as when using e",
      "//if this doesn't become true further down, that means we couldn't find a correctly converted utf8mb4 posts table",
      "// change the recurrence flag to a required field defaulting to 0, to avoid missing recurrences in EM_Events::get() due to wayward null values",
      "// Creating the events table",
      "// Creating the events table",
      "//if updating from version 4 (4.93 is beta v5) then set all statuses to 1 since it's new",
      "// Creating the events table",
      "//Add the categories table",
      "// Creating the events table",
      "//Add the categories table",
      "// Creating the events table",
      "// Creating the events table",
      "//wp-events-plugin.com';",
      "//event admin emails - new format to the above, standard format plus one unique line per booking status at the top of the body and subject line",
      "//wp-events-plugin.com';",
      "//registration email content",
      "//used to store admin-related data such as notice flags and other row keys that may not always exist in the wp_options table",
      "//Event List Options",
      "//Event Search Options",
      "/*\n\t\t//GeoCoding\n\t\t'dbem_geo' => 1,\n\t\t'dbem_geonames_username' => '',\n\t\t*/",
      "//Event Form and Anon Submissions",
      "//Location Formatting",
      "//Category page options",
      "//Categories Page Formatting",
      "//Category Formatting",
      "//Tags Page Formatting",
      "//Tag Page Formatting",
      "//get event order and orderby or use same new installation defaults",
      "//eventually will use %",
      "//Image Manipulation",
      "//approval is on by default",
      "//overbooking before approval?",
      "//overbooking possible when approving?",
      "//double bookings or more, users can't double book by default",
      "//can users cancel their booking?",
      "//can users cancel their booking?",
      "//adjust prices to show tax?",
      "//show login form on booking area",
      "//ucwords it to prevent extra translation",
      "//Registration Email",
      "//Ticket Specific Options",
      "//custom CSS options for public pages",
      "//my event bookings page",
      "/*\n\t\t * Custom Post Options - set up to mimick old EM settings and install with minimal setup for most users\n\t\t */",
      "//'dbem_cp_events_template_page' => 0, DEPREICATED",
      "//location cp options",
      "//'dbem_cp_locations_template_page' => 0, DEPREICATED",
      "//category cp options",
      "//category cp options",
      "//optimization options",
      "//data privacy/protection",
      "//do date js according to locale:",
      "//set time localization for first time depending on current settings",
      "//Localise vars regardless",
      "// Setting 12 hours format for those countries using it",
      "// Check EM Pro update min",
      "//make events, cats and locs pages",
      "//reset orderby, or convert fields to new fieldnames",
      "//Locations and categories weren't controlled in v4, so just reset them",
      "//Update the slugs if necessary",
      "//just remove all rsvp cut-off info",
      "//tax rates now saved at booking level, so that alterations to tax rates don't change previous booking prices",
      "//any past bookings that don't get updated will adhere to these two values when calculating prices",
      "//copy registration email content into new setting",
      "//copy registration email content into new setting",
      "//avoids the double search form on overridden templates",
      "//upgrades shouldn't get extra surprises",
      "//don't display units search for previous installs",
      "//correcting the typo",
      "//if template isn't overridden, assume it is still being used",
      "//we can assume this isn't used in templates",
      "//don't override excerpts in previous installs",
      "//rename email templates sent to admins on new bookings",
      "//if approvals ENABLED, we should make the old 'New Booking' email the one for a pending booking",
      "//if approvals DISABLED, we should make the old 'New Booking' email the one for a confirmed booking",
      "//delete all _event_created_date and _event_date_modified records in post_meta, we don't need them anymore, they were never accurate to begin with, re",
      "//upgrade tables only if we didn't do it before during earlier dev versions",
      "//migrate certain options",
      "//we're doing this at multisite level instead within dev versions, so fix this for dev versions",
      "//add backwards compatability settings and warnings",
      "//warning just for users who upgraded to 5.9 on multisite without global tables enabled",
      "//wp-events-plugin.com/documentation/data-privacy-gdpr-compliance/?utm_source=plugin&utm_campaign=gdpr_update');",
      "//wp-events-plugin.com/documentation/google-maps/api-usage/?utm_source=plugin&utm_source=medium=settings&utm_campaign=gmaps-update\">'.esc_html__('docu",
      "//if port is supplied via the host address, give that precedence over the port setting",
      "//', $host, $host_port_matches) ){",
      "//wp-events-plugin.com/documentation/location-types/\" target=\"_blank\">'. esc_html__('documentation', 'events-manager')).'</a>';",
      "// recreate all event_parent records in post meta",
      "// do just this blog, other blogs will update themselves when loaded",
      "// last version check in numbers, 6 onwwards uses version_compare",
      "// convert jQuery UI DateFormat for max back-compat",
      "// check if there's any kind of non-convertable placeholders",
      "/* d */",
      "/* m */",
      "// disable tags searching by default for previous users",
      "// it'd be nice to do 2 sweeps for our new templates, so we'll up the recursions to 2 so we can nest once, it'll also cover most use cases",
      "// admin optiosn for upgrade/migration",
      "// notify user of new update",
      "// notify user of new update",
      "// enable advanced formatting for any previous users, looks like before, they can disable afterwards.",
      "// slated for 6.1 - atomic tickets - tweaked for mariadb < 10.0 compatiability",
      "//$query = \"UPDATE \". EM_TICKETS_BOOKINGS_TABLE .\" SET ticket_uuid= LOWER(CONCAT( HEX(RANDOM_BYTES(4)), '', HEX(RANDOM_BYTES(2)), '4', SUBSTR(HEX(RAND",
      "// check for duplicates, md5 has much more chnace of collision",
      "// do the same for regular bookings, allowing for unique IDs that can be used by guest users to access (future feature)",
      "//$query = \"UPDATE \". EM_BOOKINGS_TABLE .\" SET booking_uuid= LOWER(CONCAT( HEX(RANDOM_BYTES(4)), '', HEX(RANDOM_BYTES(2)), '4', SUBSTR(HEX(RANDOM_BYTE",
      "// check for duplicates, md5 has much more chnace of collision",
      "// Now go through current bookings and split the tickets up, 100 at a time",
      "// first check that we maybe didn't die halfway through this and there aren't others with the same ticket/bookingid combo by simply deleting these",
      "// now we generate split tickets, one space per ticket",
      "// insert the new split tickets and delete the old one, rinse and repeat",
      "// some users experienced issues with the following updates, so we'll do a check for the booking_meta_migrated field and see if everything went throug",
      "// we didn't fully migrate, so we need to go back and re-migrate the missing data",
      "// retrigger EM Pro after as well",
      "// atomic booking meta! for 6.1",
      "// let's go through every booking and split it all up",
      "// now we generate split meta, any meta in an array should be dealt with by corresponding plugin (e.g. Pro for form field meta)",
      "// we go down one level for automated array combining",
      "// handle emojis - copied check from wpdb",
      "// handle emojis - copied check from wpdb",
      "// insert the new split tickets and delete the old one, rinse and repeat",
      "// finally update the booking again so we know it was migrated",
      "// first check that we maybe didn't die halfway through this and there aren't others with the same ticket/bookingid combo by simply deleting these",
      "// now add the batch",
      "// we're going to fix a potential duplicate data issue that emerged in a recent update, cause unknown, fix know as below...\u00e7",
      "// we have a problem...",
      "// first see if there's even a problem",
      "// try once more in case mid-dev updates were attempted between EM v6.1.1.2 and v6.1.2",
      "// copy all the data to the duplicate table",
      "// verify the number of rows match the original table",
      "// all done! just warn the user about the deletion and the copied table, just in case",
      "// disable the modal so it's not shown again",
      "// prevent grids just to avoid styling snafus",
      "// groups now are part of view settings for a list type",
      "//Assign caps in groups, as we go down, permissions are \"looser\"",
      "/* Event Capabilities */",
      "/* Recurring Event Capabilties */",
      "/* Location Capabilities */",
      "/* Category Capabilities */",
      "//Add all the open caps",
      "/* Event Capabilities */",
      "/* Recurring Event Capabilties */",
      "/* Location Capabilities */",
      "//subscribers can read private stuff, nothing else",
      "//Add new caps that are similar to old ones",
      "//Now Locations Page",
      "//Now Categories Page",
      "//create AND and WHERE conditions for blog IDs if we're in Multisite Glboal Mode",
      "//reset all the data for these purposes",
      "//start migration of old date formats to new datetime formats in local and UTC mode along with a declared timezone",
      "//firstly, we do a query for all-day events and reset the times, so that UTC times are correct relative to the local time",
      "//migration procedure depends on whether we have an actual timezone or just a manual offset of hours in the WP settings page",
      "//we'll get the minimum start/end dates in our events, and get the transitions for this range",
      "//now, build the SQL statements with the transitions",
      "//go through each transition and add it to the right offset array key",
      "//format start/end transitions for mysql DATETIME format IN CORRECT TIMEZONE",
      "//set up SQL statement for offset if it doesn't exist, but without the WHERE clause, which we'll add later",
      "//create array of conditions, which we'll join into single statements for each unique offset amount",
      "//glue the where clauses together with SQLs and create the minimum required statements to run this update",
      "//This gets very easy... just do a single query that copies over all the times to right columns with relevant offset",
      "//set the timezone (on initial migration all events have same timezone of blog)",
      "//reave meta data - at this point once we've copied over all of the dates, so we do 5 queries to postmeta, one for each field we've created above star",
      "//delete all previously added fields, in case they were added before",
      "//create a timestamp combining two given fields, which we'll now use",
      "//return the result of this migration, either true for no errors, or a string of errors.",
      "//we add a day just to get the most comprehensive range possible",
      "//get first and next transitions to create a range, if there's only one transition we create a fake transition",
      "//add the final transition and break this loop",
      "//add the final transition and break this loop"
    ],
    "length": 105083,
    "preview": "<?php\n\nfunction em_install() {\n\tglobal $wp_rewrite, $em_do_not_finalize_upgrade;\n\tswitch_to_locale(EM_ML::$wplang); //switch to blog language (if applicable)\n   \t$wp_rewrite->flush_rules();\n\t$old_version = get_option('dbem_version');\n\t//Won't upgrade",
    "file": "src/code/events-manager/em-install.php"
  },
  {
    "type": "php",
    "functions": [
      "em_paginate",
      "em_admin_paginate",
      "em_add_get_params",
      "em_get_countries",
      "em_get_scopes",
      "em_get_currencies",
      "em_get_currency_formatted",
      "em_get_currency_symbol",
      "em_get_currency_name",
      "em_get_hour_format",
      "em_get_days_names",
      "em_verify_nonce",
      "em_wp_get_referer",
      "em_get_wp_users",
      "em_get_attributes",
      "em_booking_add_registration",
      "em_register_new_user",
      "em_new_user_notification",
      "em_wp_is_super_admin",
      "em_get_search_form_defaults",
      "if",
      "em_get_search_views",
      "em_output_events_view",
      "em_get_location_search_views",
      "em_output_locations_view",
      "em_option_items",
      "em_checkbox_items",
      "em_options_input_text",
      "em_options_input_password",
      "em_options_textarea",
      "em_options_radio",
      "em_options_radio_binary",
      "em_options_select",
      "em_ascii_encode",
      "is_main_query",
      "em_get_date_format"
    ],
    "classes": [],
    "comments": [
      "//overridable e.g. in you mu-plugins folder.",
      "/**\n * Takes a few params and determines a pagination link structure\n * @param string $link\n * @param int $total\n * @param int $limit\n * @param int $p",
      "//Get querystring for first page without page",
      "//if $data was passed, strip any of these vars from both the $query_arr and $link for inclusion in the data-em-ajax attribute",
      "//remove the data attributes from $query_arr",
      "//rebuild the master link, without these data attributes",
      "//for inclusion later on",
      "//proceed to build the base querystring without pagination arguments",
      "//calculate pages to show, totals etc.",
      "//Total number of pages, i.e. also the last page to show",
      "//Which page to start the pagination links from (in case we're on say page 12 and $pagesToShow is 10 pages)",
      "//To avoid url encoded/non encoded placeholders",
      "//Add the back and first buttons",
      "//Loop each page and create a link or just a bold number if its the current page",
      "// 10 11 12 13 14 15 16 17 18 19 20",
      "// second number onwards should be wrapped with a span and hidden for responsivenes if it's not next to the current number",
      "// in other words, if there's only two page numbers before current, always visible, more - hide 2nd till current",
      "// not first page in list, so we should close previous active current",
      "// leave last number unwrapped",
      "//Add the forward and last buttons",
      "/**\n * Creates a wp-admin style navigation.\n * @param string $link\n * @param int $total\n * @param int $limit\n * @param int $page\n * @param int $pagesT",
      "/**\n * Takes a url and appends GET params (supplied as an assoc array), it automatically detects if you already have a querystring there\n * @param str",
      "//Splig the url up to get the params and the page location",
      "//get the get params as an array",
      "//split further into associative array",
      "//Now build the array back up.",
      "/**\n * Get a array of countries, translated. Keys are 2 character country iso codes. If you supply a string or array that will be the first value in t",
      "/**\n * Returns an array of scopes available to events manager. Hooking into this function's em_get_scopes filter will allow you to add scope options t",
      "/**\n * Works like check_admin_referrer(), but also in public mode. If in admin mode, it triggers an error like in check_admin_referrer(), if outside a",
      "/**\n * Since WP 4.5 em_wp_get_referer() returns false if URL is the same. We use it to get a safe referrer url, so we use the new wp_get_raw_referer()",
      "//do essentially what em_wp_get_referer does, but potentially returning the same url as before",
      "/**\n * Gets all WP users\n * @return array\n */",
      "//added as a temp fix for http://core.trac.wordpress.org/ticket/23609, we need to make some sort of autocompleter search for users instead",
      "//We also get a list of attribute names and create a ddm list (since placeholders are fixed)",
      "//We now have one long string of formats, get all the attribute placeholders",
      "//Now grab all the unique attributes we can use in our event.",
      "//check if there's ddm values",
      "/**\n * Decides whether to register a user based on a certain booking that is to be added\n * @param EM_Booking $EM_Booking \n */",
      "//Does this user need to be registered first?",
      "//find random username - less options for user, less things go wrong",
      "//otherwise may fail validation",
      "//fix to prevent warnings",
      "//fix to prevent warnings",
      "/* @var $id WP_Error */",
      "//Validate name, phone and email",
      "//Save default person to booking",
      "//user must be logged in, so we make this person the current user id",
      "/**\n * Copied straight from wp-login.php, only change atm is a function renaming.\n * Handles registering a new user.\n *\n * @param array associative ar",
      "// Check the username",
      "// Check the e-mail address",
      "//custom registration filter to prevent things like SI Captcha and other plugins of this kind interfering with EM",
      "//Set up the Password change nag.",
      "/**\n * Notify the blog admin of a new user, normally via email.\n *\n * @since 2.0\n */",
      "//if you want you can disable this email from going out, and will still consider registration as successful.",
      "//Copied out of /wp-includes/pluggable.php",
      "// The blogname option is escaped with esc_html on the way into the database in sanitize_option",
      "// we want to reverse this for the plain text arena of emails.",
      "//send email to user",
      "//for WP 4.4, regenerate password link can be used",
      "/**\n * Transitional function to handle WP's eventual move away from the is_super_user() function \n */",
      "/**\n * Returns an array of flags that are used in search forms.\n * @return array\n */",
      "//default search term",
      "//$search_args['search_term_main'] = get_option('dbem_search_form_text_main'); // show in main form?",
      "//default geo search term (requires 'near' as well for it to make sense)",
      "//default near search params",
      "//$search_args['search_geo_main'] = get_option('dbem_search_form_geo_main'); // show in main form?",
      "//default distance unit",
      "//default distance amount",
      "//possible distance values",
      "//default scope term",
      "//$search_args['search_scope_main'] = get_option('dbem_search_form_scope_main'); // show in main form?",
      "//eventful locations",
      "//default search term",
      "// advanced search placeholder",
      "// include/exclude filters of categories to show",
      "// include/exclude filters of categories to hide",
      "//default search term",
      "// advanced search placeholder",
      "// include/exclude filters of tags to show",
      "// include/exclude filters of tags to hide",
      "//decides whether or not to show main area and collapseable advanced search options",
      "// disable certain things based on context, can be overriden by $base_args, not necessarily recommended",
      "// default is events",
      "// disable these non-event searches",
      "//merge defaults with supplied arguments",
      "// sanitize views option",
      "//add specific classes for wrapper dependent on settings",
      "// deprecated - legacy backcompat",
      "// legacy backwards compatible classes",
      "// number of search fields",
      "//overwrite with $_REQUEST defaults in event of a submitted search",
      "// id used for element ids",
      "// id used for element ids",
      "// fix scope so it's search-friendly, scopes must have a 0 and 1 key for start/end dates, and optionally an associated name",
      "// convert currently supported scope into array, future conversions should be done elsewhere in another function",
      "// future consideration... but currently the commented lines would set a date on search form by default",
      "//$EM_DateTime = new EM_DateTime;",
      "//$args['scope'] = array( 0 => $EM_DateTime->format('Y-m-d'), 1 => '', 'name' => 'future', );",
      "//default scope term",
      "//default scope term",
      "//convert scope to an array in event of pagination",
      "// reset and populate sanitized",
      "//if successful, this template overrides the settings and defaults, including search",
      "//if successful, this template overrides the settings and defaults, including search",
      "// add default grid formats",
      "//if successful, this template overrides the settings and defaults, including search",
      "// prevent view and search getting output again",
      "// last resort we're showing a list",
      "//if successful, this template overrides the settings and defaults, including search",
      "//if successful, this template overrides the settings and defaults, including search",
      "// add default grid formats",
      "//if successful, this template overrides the settings and defaults, including search",
      "// last resort we're showing a list",
      "//if successful, this template overrides the settings and defaults, including search",
      "/*\n * UI Helpers\n * previously dbem_UI_helpers.php functions\n */",
      "// deal with an option stored as an array",
      "// got from http://davidwalsh.name/php-email-encode-prevent-spam",
      "/**\n\t * Substitutes the original function in 3.3 onwards, for backwards compatability (only created if not previously defined)\n\t * @return bool\n\t */",
      "/**\n * deprecated\n * @return string\n */"
    ],
    "length": 115160,
    "preview": "<?php\n\nif(!function_exists('em_paginate')){ //overridable e.g. in you mu-plugins folder.\n/**\n * Takes a few params and determines a pagination link structure\n * @param string $link\n * @param int $total\n * @param int $limit\n * @param int $page\n * @par",
    "file": "src/code/events-manager/em-functions.php"
  },
  {
    "type": "php",
    "functions": [
      "dbem_debug_mode",
      "bp_em_init",
      "oauth",
      "init",
      "register",
      "public_enqueue",
      "inline_enqueue",
      "admin_enqueue",
      "min_suffix",
      "localize_script",
      "em_enqueue_public",
      "em_plugins_loaded",
      "load_em_wpfc_plugin",
      "em_init",
      "em_load_event",
      "__construct",
      "add_filters",
      "get_globals",
      "__call",
      "pre_option_dbem_categories_enabled",
      "em_locate_template",
      "em_get_template_components_classes",
      "em_get_template_classes",
      "em_template_classes",
      "init",
      "add_filters",
      "remove_filters",
      "__callStatic",
      "locate_template",
      "get_email_format",
      "get_formatting_modes_map",
      "get_default_formats",
      "em_rss",
      "em_modified_monitor",
      "em_admin_bar_mod",
      "em_delete_blog",
      "em_activate",
      "em_deactivate",
      "em_check_pro_compatability"
    ],
    "classes": [
      "EM_Loader",
      "EM_Scripts_and_Styles",
      "EM_MS_Globals",
      "list",
      "if",
      "to",
      "EM_Formats"
    ],
    "comments": [
      "/*\nPlugin Name: Events Manager\nVersion: 6.3\nPlugin URI: https://wp-events-plugin.com\nDescription: Event registration and booking management for WordPr",
      "/*\nCopyright (c) 2023, Marcus Sykes\n\nThis program is free software; you can redistribute it and/or\nmodify it under the terms of the GNU General Public",
      "// Setting constants",
      "//self expanatory, although version currently may not correspond directly with published version number. until 6.0 we're stuck updating 5.999.x",
      "//an absolute path to this directory",
      "//an absolute path to this directory",
      "// AJAX now enabled by default, disable if you really want to (but why? it's so nice!)",
      "//allows for conditional recursios to be nested, 2 recommended due to our default template formats",
      "//DEBUG MODE - currently not public, not fully tested",
      "//add_action('plugins_loaded', 'dbem_debug_mode');",
      "//set up events as posts",
      "//Template Tags & Template Logic",
      "//post/taxonomy controllers",
      "/* Only load the component if BuddyPress is loaded and initialized. */",
      "//Backward compatability for old images stored in < EM 5",
      "//If in ms recurrence mode, we are getting the default wp-content/uploads folder",
      "/**\n * Provides a way to proactively load groups of files, once, when needed.\n * @since 5.9.7.4\n */",
      "/**\n * @author marcus\n * Contains functions for loading styles on both admin and public sides.\n */",
      "//Scripts and Styles",
      "// register scripts - empty for now (removed em-select in favour of direct inclusion in events-manager.js)",
      "/**\n\t * Enqueuing public scripts and styles\n\t */",
      "//pages which EM needs CSS or JS",
      "//Decide whether or not to include certain JS files and dependencies",
      "//determine what script dependencies to include, and which to not include",
      "//events page only needs datepickers",
      "//submit/edit event pages require",
      "//edit booking pages require a few more ui scripts",
      "//check whether to load our general script or not",
      "//given we depend on jQuery, there must be at least a jQuery dep for our file to be loaded",
      "//jQuery will load as dependency",
      "// list tables dependencies",
      "/*\n\t\tif( (!empty($pages['edit-bookings']) && is_page($pages['edit-bookings'])) || get_option('dbem_js_limit_edit_bookings') === '0' || in_array($obj_i",
      "//Now decide on showing the CSS file",
      "// check if we want to override our theme basic styles as per styling options",
      "// don't load if the post being edited isn't an EM one",
      "/**\n\t * Returns an optional suffix to use in CSS/JS enqueueing, which is .min if in production mode\n\t *\n\t * @return string\n\t */",
      "/**\n\t * Localize the script vars that require PHP intervention, removing the need for inline JS.\n\t */",
      "//get_option('dbem_date_format_js', 'yy-mm-dd'), // DEPRECATED (legacy jQuery UI datepicker) - prevents blank datepickers if no option set",
      "// reorder this array for efficiency if you override it, so smallest is first, largest or false is last",
      "// reorder this array for efficiency if you override it, so smallest is first, largest or false is last",
      "// localize flatpickr",
      "//booking-specific stuff",
      "//logged in messages that visitors shouldn't need to see",
      "//load admin/public only vars",
      "//In case ppl used this somewhere",
      "/**\n * Perform plugins_loaded actions\n */",
      "/* Booking Capabilities */",
      "/* Event Capabilities */",
      "/*'read_events' => sprintf(__('You cannot view %s','events-manager'),__('events','events-manager')),*/",
      "/* Recurring Event Capabilties */",
      "/* Location Capabilities */",
      "/*'read_locations' => sprintf(__('You cannot view %s','events-manager'),__('locations','events-manager')),*/",
      "/* Category Capabilities */",
      "/* Upload Capabilities */",
      "// other integrations",
      "/**\n * Perform init actions\n */",
      "//RSS PAGE URI via CPT archives page",
      "//Upgrade/Install Routine",
      "//add custom functions.php file",
      "//fire a loaded hook, most plugins should consider going through here to load anything EM related",
      "/**\n * This function will load an event into the global $EM_Event variable during page initialization, provided an event_id is given in the url via GE",
      "// single event page for a subsite event being shown on the main blog",
      "// single event page for a subsite event being shown on the main blog",
      "//make the request id take priority, this shouldn't make it into unwanted objects if they use theobj::get_person().",
      "/**\n\t * Catches various option names and returns a network-wide option value instead of the individual blog option. Uses the magc __call function to c",
      "//if we're in MS Global mode, the categories option currently resides in the main blog, consider moving this to a network setting in the future",
      "//multisite settings",
      "/**\n\t\t * Returns the option of the main site in this network, this function should only be fired if in MS Global mode.\n\t\t * @param int $value\n\t\t * @re",
      "//only alter value if not on main site already",
      "//return a number since false will not circumvent pre_option_ filter",
      "/**\n * Works much like <a href=\"http://codex.wordpress.org/Function_Reference/locate_template\" target=\"_blank\">locate_template</a>, except it takes a ",
      "//First we check if there are overriding tempates in the child or parent theme",
      "// now check the wp-content/plugin-templates/events-manager/ folder",
      "// finally get the plugin from EM if no others exist",
      "// not a theme wrapper, just a view wrapper",
      "// we don't need pixelbones",
      "// the 'my bookings' page for visitors, not admins",
      "// we don't need pixelbones",
      "/**\n * Returns a class list array according to the supplied component and subcomponent, which can be hooked into or altered according to EM settings p",
      "// get base components",
      "// we assume here that we're looking here for subcomponent classes, nothing more",
      "// get additional components",
      "// merge classes here as we go, store into data variable for the filter further down",
      "// add base classes (if applicable)",
      "// if greater than 1 then it won't include pixelbones",
      "/* Want to overpower our styling? See these examples:\nadd_filter('em_get_template_classes', '__return_empty_array');\n*/",
      "/*\nadd_filter('em_get_template_classes', function( $classes, $component, $subcomponents, $just_subcomponent, $component_data, $subcomponents_data ){\n\t",
      "/**\n * @see em_get_template_classes()\n * @param $component\n * @param $theme\n * @return void\n */",
      "/**\n * Quick class to dynamically catch wp_options that are EM formats and need replacing with template files.\n * Since the options filter doesn't hav",
      "/**\n\t * @var array array of previously loaded formats for faster reference. much like get_option does\n\t */",
      "/**\n\t * @var string Name of filter for other plugins to override, should be overriden also by extending class\n\t */",
      "//you can hook into this filter and activate the format options you want to override by supplying the wp option names in an array, just like in the da",
      "// exit on setting pages to avoid content wiping",
      "/**\n\t * Intercepts the pre_option_ hooks and check if we have a php file format verion, if so that content is supplied.\n\t * @param string $name\n\t * @p",
      "/**\n\t * @return mixed|void\n\t */",
      "// load all formats from files",
      "// go through settings and see what needs loading from files and which don't",
      "// if set to 2 (or something else) we're loading everything direct from settings",
      "/**\n * Catches the event rss feed requests\n */",
      "//check if we're meant to override the feeds - we only check EM's taxonomies because we can't guarantee (well, not without more coding) that it's not ",
      "//event category feed",
      "//events feed - show it all",
      "//make is_feed() return true AIO SEO fix",
      "/**\n * Monitors event saves and changes the rss pubdate and a last modified option so it's current\n * @param boolean $result\n * @return boolean\n */",
      "//delete events if MS Global",
      "/* Creating the wp_events table to store event data*/",
      "/**\n * Fail-safe compatibility checking of EM Pro \n */"
    ],
    "length": 55031,
    "preview": "<?php\n/*\nPlugin Name: Events Manager\nVersion: 6.3\nPlugin URI: https://wp-events-plugin.com\nDescription: Event registration and booking management for WordPress. Recurring events, locations, webinars, google maps, rss, ical, booking registration and m",
    "file": "src/code/events-manager/events-manager.php"
  },
  {
    "type": "php",
    "functions": [
      "em_empro_lt_2376_notice",
      "em_empro_lt_3_notice"
    ],
    "classes": [],
    "comments": [
      "//in the event the Pro add-on is installed but fails to meet the minimum EM_PRO_MIN_VERSION, this file will be executed in case extra actions are need",
      "//we changed some function scopes to static, so Pro must be updated or modified to prevent fatal errors and should not be activated",
      "//we're deactivating Pro until that happens",
      "//wp-events-plugin.com/blog/2014/04/15/important-changes-to-5-5-3-and-pro-2-3-8-versions/\">Click here for detailed information about this change</a>, ",
      "//wp-events-plugin.com/documentation/v6-migration/\">Click here for more information about these changes</a>, which includes a line of code you can use"
    ],
    "length": 2432,
    "preview": "<?php\n//in the event the Pro add-on is installed but fails to meet the minimum EM_PRO_MIN_VERSION, this file will be executed in case extra actions are needed\ndefine('EM_COMPAT_MESSAGE_BE_GONE',\"Only Administrators see this message. To hide critical ",
    "file": "src/code/events-manager/em-pro-compatibility.php"
  },
  {
    "type": "php",
    "functions": [
      "init",
      "preview_formats",
      "actions",
      "em_options_page_header"
    ],
    "classes": [
      "EM_v6_Migration"
    ],
    "comments": [
      "/* @var EM_Notices $EM_Notices */",
      "// deal with v6 migration",
      "// migrate all options over",
      "// this is for legacy widgets, v7 will remove it",
      "// disable preview in case",
      "// copy over new formats overriding old ones, but putting them in an 'undo' var",
      "// no auto-loading this",
      "// add overriding styling",
      "// remove notices and add confirmation",
      "//add tab hash path to url if supplied",
      "// Deal with v6 transition",
      "//wp-events-plugin.com/documentation/v6-migration/\" target=\"_blank\">'.esc_html__('here', 'events-manager').'</a>'); ?></p>"
    ],
    "length": 8353,
    "preview": "<?php\nclass EM_v6_Migration {\n\tpublic static function init(){\n\t\t$v6 = EM_Options::get('v6', null);\n\t\tif( $v6 === null ) return;\n\t\tif( (!is_admin() || defined('EM_DOING_AJAX')) && $v6 === 'p' ){\n\t\t\tadd_action('events_manager_loaded', 'EM_v6_Migration:",
    "file": "src/code/events-manager/v6-migrate.php"
  },
  {
    "type": "php",
    "functions": [
      "em_event_submission_emails"
    ],
    "classes": [],
    "comments": [
      "/**\n * @param boolean $result\n * @param EM_Event $EM_Event\n * @return boolean\n */",
      "//if this is just published, we need to email the user about the publication, or send to pending mode again for review",
      "//only send email to users that can't publish events themselves and that were previously unpublished",
      "//admin emails are in an array, single or multiple",
      "//Send email to admins",
      "//admin emails are in an array, single or multiple"
    ],
    "length": 3408,
    "preview": "<?php\n/**\n * @param boolean $result\n * @param EM_Event $EM_Event\n * @return boolean\n */\nfunction em_event_submission_emails($result, $EM_Event){\n    if( $result ){\n\t\t//if this is just published, we need to email the user about the publication, or sen",
    "file": "src/code/events-manager/em-emails.php"
  },
  {
    "type": "php",
    "functions": [
      "em_data_privacy_consent_checkbox",
      "em_data_privacy_consent_hooks",
      "em_data_privacy_consent_event_checkbox",
      "em_data_privacy_consent_location_checkbox",
      "em_data_privacy_consent_booking_get_post",
      "em_data_privacy_consent_booking_validate",
      "em_data_privacy_consent_booking_save",
      "em_data_privacy_cpt_get_post",
      "em_data_privacy_cpt_validate",
      "em_data_privacy_cpt_save"
    ],
    "classes": [],
    "comments": [
      "/**\n * Outputs a checkbox that can be used to obtain consent.\n * @param EM_Event|EM_Location|EM_Booking|bool $EM_Object\n */",
      "//already saved so consent was given at one point",
      "// buddyboss fix since bb v1.6.0",
      "// replace privacy policy text %s with link to policy page",
      "// buddyboss unfix since bb v1.6.0",
      "// check if consent was previously given and check box if true",
      "//ignore if consent given as per settings",
      "//supply 0 args since arg is $EM_Event and callback will think it's an event submission form",
      "/**\n\t\t * Wrapper function in case old overriden templates didn't pass the EM_Event object and depended on global value\n\t\t * @param EM_Event $event\n\t\t ",
      "/**\n\t\t * Wrapper function in case old overriden templates didn't pass the EM_Location object and depended on global value\n\t\t * @param EM_Location $loc",
      "/**\n * Gets consent information for the submitted booking and and add it to the booking object for saving later.\n * @param bool $result\n * @param EM_B",
      "/**\n * Validates a bookng to ensure consent is/was given.\n * @param bool $result\n * @param EM_Booking $EM_Booking\n * @return bool\n */",
      "//check if consent was previously given and ignore if settings dictate so",
      "//ignore if consent given as per settings",
      "/**\n * Updates or adds the consent date of user account meta if booking was submitted by a user and consent was given.\n * @param bool $result\n * @para",
      "/**\n * Save consent to event or location object\n * @param bool $result\n * @param EM_Event|EM_Location $EM_Object\n * @return bool\n */",
      "/**\n * Validate the consent provided to events and locations.\n * @param bool $result\n * @param EM_Event|EM_Location $EM_Object\n * @return bool\n */",
      "//check if consent was previously given and ignore if settings dictate so",
      "//ignore if consent given as per settings",
      "/**\n * When an event or location is saved and consent is given or supplied again, update user account with latest consent date IF the object isn't ass"
    ],
    "length": 8411,
    "preview": "<?php\n/**\n * Outputs a checkbox that can be used to obtain consent.\n * @param EM_Event|EM_Location|EM_Booking|bool $EM_Object\n */\nfunction em_data_privacy_consent_checkbox( $EM_Object = false ){\n\tif( !empty($EM_Object) && (!empty($EM_Object->booking_",
    "file": "src/code/events-manager/em-data-privacy.php"
  },
  {
    "type": "php",
    "functions": [
      "em_get_events",
      "em_events",
      "em_get_locations",
      "em_locations",
      "em_get_calendar",
      "em_calendar",
      "em_get_events_list_grouped",
      "em_events_list_grouped",
      "em_get_link",
      "em_link",
      "em_get_rss_link",
      "em_rss_link",
      "em_event_form",
      "em_get_event_form",
      "em_events_admin",
      "em_get_events_admin",
      "em_event_search_form",
      "em_get_event_search_form",
      "em_location_form",
      "em_get_location_form",
      "em_locations_admin",
      "em_get_locations_admin",
      "em_location_search_form",
      "em_get_location_search_form",
      "em_bookings_admin",
      "em_get_bookings_admin",
      "em_my_bookings",
      "em_get_my_bookings",
      "em_is_event",
      "em_is_location",
      "em_are_events_available",
      "em_is_events_page",
      "em_is_event_page",
      "em_is_calendar_day_page",
      "em_is_category_page",
      "em_is_categories_page",
      "em_is_tag_page",
      "em_is_location_page",
      "em_is_locations_page",
      "em_is_my_bookings_page",
      "em_is_event_rsvpable"
    ],
    "classes": [
      "type",
      "type"
    ],
    "comments": [
      "/*\n * Template Tags\n * If you know what you're doing, you're probably better off using the EM Objects directly.\n */",
      "/* \n * ---------------------------------------------------------------------\n * Displaying Functions - Displays Lists, Page Links/URLs, etc.\n * ------",
      "/**\n * Returns a html list of events filtered by the array or query-string of arguments supplied. \n * @param array|string $args\n * @return string\n */",
      "// allows the use of arguments without breaking the legacy code",
      "//close AJAX wrapper",
      "/**\n * Prints out a list of events, takes same arguments as em_get_events.\n * @param array|string $args\n * @uses em_get_events()\n */",
      "/**\n * Returns a html list of locations filtered by the array or query-string of arguments supplied. \n * @param array|string $args\n * @return string\n ",
      "// allows the use of arguments without breaking the legacy code",
      "//close AJAX wrapper",
      "//no ajax allowed with custom on-the-fly formats",
      "/**\n * Prints out a list of locations, takes same arguments as em_get_locations.\n * @param array|string $args\n * @uses em_get_locations()\n */",
      "/**\n * Returns an html calendar of events filtered by the array or query-string of arguments supplied. \n * @param array|string $args\n * @return string",
      "// allows the use of arguments without breaking the legacy code",
      "/**\n * Prints out an html calendar, takes same arguments as em_get_calendar.\n * @param array|string $args\n * @uses em_get_calendar()\n */",
      "/**\n * Generate a grouped list of events by year, month, week or day.\n * @since 4.213\n * @param array $args\n * @return string\n */",
      "// allows the use of arguments without breaking the legacy code",
      "//close AJAX wrapper",
      "/**\n * Print a grouped list of events by year, month, week or day.\n * @since 4.213\n * @param array $args\n * @param string $format\n * @return string\n *",
      "/**\n * Creates an html link to the events page.\n * @param string $text\n * @return string\n */",
      "//In case options aren't there....",
      "/**\n * Prints the result of em_get_link()\n * @param string $text\n * @uses em_get_link()\n */",
      "/**\n * Creates an html link to the RSS feed\n * @param string $text\n * @return string\n */",
      "/**\n * Prints the result of em_get_rss_link()\n * @param string $text\n * @uses em_get_rss_link()\n */",
      "/* \n * ---------------------------------------------------------------------\n * User Interfaces - Forms, Tables etc.\n * ------------------------------",
      "/**\n * Outputs the event submission form for guests and members.\n * @param array $args\n */",
      "//Give a default location & category",
      "/**\n * Retreives the event submission form for guests and members.\n * @param array $args\n */",
      "/**\n * Outputs table of events belonging to user\n * Additional search arguments:\n * * show_add_new - passes argument to template as $show_add_new whet",
      "//get listing options for $args",
      "//deal with view or scope/status combinations",
      "//template $args for different views",
      "//modify $args for current view",
      "//reset the limit and offset to allow for filter",
      "//count events without limits for pagination",
      "//add limit and offset again to args",
      "//now get the limited events to display",
      "/**\n * Retreives table of events belonging to user\n * @param array $args\n */",
      "/**\n * Outputs the event search form.\n * @param array $args\n */",
      "/**\n * Retreives the event search form.\n * @param array $args\n */",
      "/**\n * Outputs the location submission form for guests and members.\n * @param array $args\n */",
      "/**\n * Retreives the location submission form for guests and members.\n * @param array $args\n */",
      "/**\n * Outputs table of locations belonging to user\n * @param array $args\n */",
      "//set current blog id if not on main site and using global mode whilst not forcing all locations to be on main blog",
      "//get set of locations",
      "/**\n * Retreives table of locations belonging to user\n * @param array $args\n */",
      "/**\n * Outputs the location search form.\n * @param array $args\n */",
      "/**\n * Retreives the event search form.\n * @param array $args\n */",
      "/* \n * ---------------------------------------------------------------------\n * Conditionals - Yes/No functions\n * -----------------------------------",
      "/**\n * Returns whether or not this object is an event or not. This can be a loose verification method by supplying an EM_Event object, post object, po",
      "// we assume it's either a EM_Event class type or just a WP_Post object",
      "// we assume we were passed a post_id",
      "// we assume we were passed a post type",
      "/**\n * Returns whether or not this object is an location or not. This can be a loose verification method by supplying an EM_Location object, post obje",
      "// we assume it's either a EM_Location class type or just a WP_Post object",
      "// we assume we were passed a post_id",
      "// we assume we were passed a post type",
      "/**\n * Returns true if there are any events that exist in the given scope (default is future events).\n * @param string $scope\n * @return boolean\n */",
      "/**\n * Returns true if the page is the events page. this is now only an events page, before v4.0.83 this would be true for any multiple page (e.g. loc",
      "/**\n * Is this a a single event page?\n * @return boolean\n */",
      "/**\n * Is this a a single calendar day page?\n * @return boolean\n */",
      "/**\n * Is this a a single category page?\n * @return boolean\n */",
      "/**\n * Is this a categories list page?\n * @return boolean\n */",
      "/**\n * Is this a a single category page?\n * @return boolean\n */",
      "/**\n * Is this a a single location page?\n * @return boolean\n */",
      "/**\n * Is this a locations list page?\n * @return boolean\n */",
      "/**\n * Is this my bookings page?\n * @return boolean\n */",
      "/**\n * Returns true if this is a single events page and the event is RSVPable\n * @return boolean\n */",
      "//We assume that we're on a single event (or recurring event) page here, so $EM_Event must be loaded"
    ],
    "length": 25019,
    "preview": "<?php\n/*\n * Template Tags\n * If you know what you're doing, you're probably better off using the EM Objects directly.\n */\n\n/* \n * ---------------------------------------------------------------------\n * Displaying Functions - Displays Lists, Page Lin",
    "file": "src/code/events-manager/em-template-tags.php"
  },
  {
    "type": "php",
    "functions": [
      "dbem_debug_option",
      "__call",
      "em_debug_notification"
    ],
    "classes": [
      "EM_DEBUG"
    ],
    "comments": [
      "//set debug mode on.",
      "//Location Formatting"
    ],
    "length": 2831,
    "preview": "<?php\n//set debug mode on.\nfunction dbem_debug_option($option){\n\tglobal $dbem_debug_options;\n\treturn $dbem_debug_options[$option];\n}\n\nglobal $dbem_debug_options;\n$dbem_email_template = str_replace('\"', \"'\", file_get_contents(WP_PLUGIN_DIR.'/events-ma",
    "file": "src/code/events-manager/em-debug.php"
  },
  {
    "type": "txt",
    "length": 169529,
    "preview": "=== Events Manager ===\nContributors: msykes, pxlite, nutsmuggler, netweblogic\nDonate link: https://w",
    "file": "src/code/events-manager/readme.txt"
  }
]