[
  {
    "type": "js",
    "functions": [
      "noop",
      "isNullOrUndef",
      "isArray",
      "isObject",
      "isNumberFinite",
      "finiteOrDefault",
      "valueOrDefault",
      "callback",
      "each",
      "_elementsEqual",
      "isValidKey",
      "_merger",
      "merge",
      "mergeIf",
      "_mergerIf",
      "_deprecated",
      "_splitKey",
      "_getKeyResolver",
      "resolveObjectKey",
      "_capitalize",
      "_isClickEvent",
      "almostEquals",
      "niceNum",
      "_factorize",
      "isNumber",
      "almostWhole",
      "_setMinAndMaxByKey",
      "toRadians",
      "toDegrees",
      "_decimalPlaces",
      "getAngleFromPoint",
      "distanceBetweenPoints",
      "_angleDiff",
      "_normalizeAngle",
      "_angleBetween",
      "_limitValue",
      "_int16Range",
      "_isBetween",
      "_lookup",
      "_filterBetween",
      "listenArrayEvents",
      "unlistenArrayEvents",
      "_arrayUnique",
      "fontString",
      "throttled",
      "debounce",
      "_getStartAndCountOfVisiblePoints",
      "_scaleRangesChanged",
      "round",
      "p2b",
      "n2b",
      "b2n",
      "n2p",
      "hexParse",
      "hexString",
      "hsl2rgbn",
      "hsv2rgbn",
      "hwb2rgbn",
      "hueValue",
      "rgb2hsl",
      "calln",
      "hsl2rgb",
      "hwb2rgb",
      "hsv2rgb",
      "hue",
      "hueParse",
      "rotate",
      "hslString",
      "unpack",
      "nameParse",
      "rgbParse",
      "rgbString",
      "interpolate",
      "modHSL",
      "clone",
      "fromObject",
      "functionParse",
      "index_esm",
      "isPatternOrGradient",
      "color",
      "getHoverColor",
      "applyAnimationsDefaults",
      "applyLayoutsDefaults",
      "getNumberFormat",
      "formatNumber",
      "calculateDelta",
      "applyScaleDefaults",
      "set",
      "toFontString",
      "_measureText",
      "_longestText",
      "_alignPixel",
      "clearCanvas",
      "drawPoint",
      "drawPointLegend",
      "_isPointInArea",
      "clipArea",
      "unclipArea",
      "_steppedLineTo",
      "_bezierCurveTo",
      "renderText",
      "setRenderOpts",
      "decorateText",
      "drawBackdrop",
      "addRoundedRectPath",
      "toLineHeight",
      "_readValueToProps",
      "toTRBL",
      "toTRBLCorners",
      "toPadding",
      "toFont",
      "resolve",
      "_addGrace",
      "createContext",
      "_createResolver",
      "_attachContext",
      "_descriptors",
      "_cached",
      "_resolveWithContext",
      "_resolveScriptable",
      "_resolveArray",
      "resolveFallback",
      "addScopes",
      "createSubResolver",
      "addScopesFromKey",
      "subGetTarget",
      "_resolveWithPrefixes",
      "_resolve",
      "getKeysFromAllScopes",
      "resolveKeysFromAllScopes",
      "_parseObjectDataRadialScale",
      "splineCurve",
      "monotoneAdjust",
      "monotoneCompute",
      "splineCurveMonotone",
      "capControlPoint",
      "capBezierPoints",
      "_updateBezierControlPoints",
      "_isDomSupported",
      "_getParentNode",
      "parseMaxStyle",
      "getStyle",
      "getPositionedStyle",
      "getCanvasPosition",
      "getRelativePosition",
      "getContainerSize",
      "getMaximumSize",
      "retinaScale",
      "readUsedSize",
      "_pointInLine",
      "_steppedInterpolation",
      "_bezierInterpolation",
      "getRtlAdapter",
      "overrideTextDirection",
      "restoreTextDirection",
      "propertyFn",
      "normalizeSegment",
      "getSegment",
      "_boundSegment",
      "_boundSegments",
      "findStartAndEnd",
      "solidSegments",
      "_computeSegments",
      "splitByStyles",
      "doSplitByStyles",
      "addStyle",
      "readStyle",
      "styleChanged"
    ],
    "classes": [
      "Color",
      "Defaults"
    ],
    "comments": [
      "/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */",
      "/**\n * @namespace Chart.helpers\n */",
      "/**\n * An empty function that can be used, for example, for optional callback.\n */",
      "/* noop */",
      "/**\n * Returns a unique id, sequentially generated from a global variable.\n */",
      "/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */",
      "/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */",
      "/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */",
      "/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */",
      "/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to",
      "/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value t",
      "/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this m",
      "/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The arra",
      "/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */",
      "/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fall",
      "// eslint-disable-next-line @typescript-eslint/no-use-before-define",
      "// eslint-disable-next-line @typescript-eslint/no-use-before-define",
      "/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */",
      "/**\n * @private\n */",
      "// resolveObjectKey resolver cache",
      "// Chart.helpers.core resolveObjectKey should resolve empty key to root object",
      "// default resolvers",
      "/**\n * @private\n */",
      "/**\n * @private\n */",
      "// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384",
      "/**\n * @param e - The event\n * @private\n */",
      "/**\n * @alias Chart.helpers.math\n * @namespace\n */",
      "/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */",
      "/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */",
      "/**\n * @private\n */",
      "/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.",
      "// Gets the angle from vertical upright to the point about a centre.",
      "// make sure the returned angle is in the range of (-PI/2, 3PI/2]",
      "/**\n * Shortest distance between angles, in either direction.\n * @private\n */",
      "/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */",
      "/**\n * @private\n */",
      "/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */",
      "/**\n * @param {number} value\n * @private\n */",
      "/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */",
      "/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - v",
      "/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param v",
      "/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of va",
      "/**\n * @param items\n */",
      "/**\n* Request animation polyfill\n*/",
      "/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */",
      "/**\n * Debounces calling `fn` for `delay` ms\n */",
      "/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */",
      "/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */",
      "/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */",
      "/**\n * Return start and count of visible points.\n * @private\n */",
      "// @ts-expect-error Need to type _parsed",
      "// @ts-expect-error Need to fix types on _lookupByKey",
      "// @ts-expect-error Need to type _parsed",
      "// @ts-expect-error Need to fix types on _lookupByKey",
      "/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */",
      "/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/",
      "/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */",
      "/* #__PURE__ */",
      "/**\n * @alias Chart.helpers.options\n * @namespace\n */",
      "/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%',",
      "/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use de",
      "/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL ",
      "/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL compone",
      "/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A o",
      "/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last ",
      "/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */",
      "/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */",
      "// Props to Rob Spencer at scaled innovation for his post on splining between points",
      "// http://scaledinnovation.com/analytics/splines/aboutSplines.html",
      "// This function must also respect \"skipped\" points",
      "// If all points are the same, s01 & s02 will be inf",
      "// scaling factor for triangle Ta",
      "/**\n * Adjust tangents to ensure monotonic properties\n */",
      "/**\n * This function calculates B\u00e9zier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensu",
      "// Calculate slopes (deltaK) and initialize tangents (mK)",
      "// In the case of two points that appear at the same x pixel, slopeDeltaX is 0",
      "/**\n * @private\n */",
      "// Only consider points that are drawn in case the spanGaps option is used",
      "/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n",
      "/**\n * @private\n */",
      "/**\n * @private\n */",
      "/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */",
      "// percentage * size in dimension",
      "/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */",
      "/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */",
      "// this is the border box of the container",
      "// eslint-disable-next-line complexity",
      "// https://github.com/chartjs/Chart.js/issues/4659",
      "// If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)",
      "/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */",
      "// If no style has been set on the canvas, the render size is used as display size,",
      "// making the chart visually bigger, so let's enforce it to the \"correct\" values.",
      "// See https://github.com/chartjs/Chart.js/issues/3575",
      "/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListen",
      "// continue regardless of error",
      "/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style o",
      "/**\n * @private\n */",
      "/**\n * @private\n */",
      "/**\n * @private\n */",
      "//# sourceMappingURL=helpers.segment.js.map"
    ],
    "length": 101380,
    "preview": "/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function ",
    "file": "src/code/events-manager/includes/external/chartjs/chunks/helpers.segment.js"
  },
  {
    "type": "ts",
    "length": 168501,
    "preview": "/* eslint-disable @typescript-eslint/ban-types */\n\n// DeepPartial implementation taken from the util",
    "file": "src/code/events-manager/includes/external/chartjs/chunks/helpers.core.d.ts"
  }
]